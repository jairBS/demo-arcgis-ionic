"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[709],{50254:(N,T,i)=>{i.d(T,{Zn:()=>M,aZ:()=>y,lh:()=>h,nA:()=>E,p3:()=>v,r9:()=>a});var e=i(81401);function h(_,c){if(null==_)return null;const m={},p=new RegExp(`^${c}`,"i");for(const n of Object.keys(_))if(p.test(n)){const o=n.substring(c.length);m[e.et.fromJSON(o)]=_[n]}return m}function v(_,c,m){if(null!=_){c.attributes||(c.attributes={});for(const p in _){const n=e.et.toJSON(p);c.attributes[`${m}${n}`]=_[p]}}}function y(_){const c={};for(const m of Object.keys(_))c[e.et.fromJSON(m)]=_[m];return c}function E(_){const c={};for(const m of Object.keys(_))c[e.et.toJSON(m)]=_[m];return c}function M(_,c){return null==_||null==c?null:Math.round((_-c)/6e4)}function a(_){var c,m,p;const n=_.toJSON(),o=n;return o.accumulateAttributeNames&&(o.accumulateAttributeNames=null===(c=n.accumulateAttributeNames)||void 0===c?void 0:c.join()),o.attributeParameterValues&&(o.attributeParameterValues=JSON.stringify(n.attributeParameterValues)),o.barriers&&(o.barriers=JSON.stringify(n.barriers)),o.outSR&&(o.outSR=null===(m=n.outSR)||void 0===m?void 0:m.wkid),o.overrides&&(o.overrides=JSON.stringify(n.overrides)),o.polygonBarriers&&(o.polygonBarriers=JSON.stringify(n.polygonBarriers)),o.polylineBarriers&&(o.polylineBarriers=JSON.stringify(n.polylineBarriers)),o.restrictionAttributeNames&&(o.restrictionAttributeNames=null===(p=n.restrictionAttributeNames)||void 0===p?void 0:p.join()),o.stops&&(o.stops=JSON.stringify(n.stops)),o.travelMode&&(o.travelMode=JSON.stringify(n.travelMode)),o}},58226:(N,T,i)=>{i.d(T,{A:()=>l});var n,e=i(8189),h=i(81098),v=i(92165),y=i(47280),E=i(90660),M=i(71065),a=i(85211),c=(i(3248),i(35150),i(40707),i(76576)),m=i(93615),p=i(81401);let o=n=class extends((0,E.O)(M.oY)){constructor(s){super(s),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(s){var t,u,r;return new n({directionLineType:p.gD.fromJSON(s.attributes.DirectionLineType),directionPointId:s.attributes.DirectionPointID,distance:s.attributes.Meters,duration:s.attributes.Minutes,fromLevel:null!==(t=s.attributes.FromLevel)&&void 0!==t?t:null,geometry:s.geometry,objectId:null!==(u=s.attributes.ObjectID)&&void 0!==u?u:s.attributes.__OBJECTID,popupTemplate:s.popupTemplate,symbol:s.symbol,toLevel:null!==(r=s.attributes.ToLevel)&&void 0!==r?r:null})}toGraphic(){const s={ObjectID:this.objectId,DirectionLineType:null!=this.directionLineType?p.gD.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return null!=this.fromLevel&&(s.FromLevel=this.fromLevel),null!=this.toLevel&&(s.ToLevel=this.toLevel),new h.A({geometry:this.geometry,attributes:s,symbol:this.symbol,popupTemplate:this.popupTemplate})}};o.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],o.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,a.MZ)({type:p.gD.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:p.gD.read}}})],o.prototype,"directionLineType",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.DirectionPointID"}}})],o.prototype,"directionPointId",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.Meters"}}})],o.prototype,"distance",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.Minutes"}}})],o.prototype,"duration",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.FromLevel"}}})],o.prototype,"fromLevel",void 0),(0,e._)([(0,a.MZ)({type:m.A})],o.prototype,"geometry",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.ObjectID"}}})],o.prototype,"objectId",void 0),(0,e._)([(0,a.MZ)({type:v.A})],o.prototype,"popupTemplate",void 0),(0,e._)([(0,a.MZ)({types:y.Es})],o.prototype,"symbol",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.ToLevel"}}})],o.prototype,"toLevel",void 0),(0,e._)([(0,a.MZ)({readOnly:!0,json:{read:!1}})],o.prototype,"type",void 0),o=n=(0,e._)([(0,c.$)("esri.rest.support.DirectionLine")],o);const l=o},37304:(N,T,i)=>{i.d(T,{A:()=>s});var o,e=i(8189),h=i(81098),v=i(92165),y=i(47280),E=i(90660),M=i(71065),a=i(85211),c=(i(3248),i(35150),i(40707),i(17221)),m=i(76576),p=i(13303),n=i(81401);let l=o=class extends((0,E.O)(M.oY)){constructor(t){super(t),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(t,u){return null!=u.attributes.ArrivalTime?new Date(u.attributes.ArrivalTime):null}static fromGraphic(t){var u,r,d,b,O,g,A,S,C,I,P,j,U,L;return new o({alternateName:null!==(u=t.attributes.AlternateName)&&void 0!==u?u:null,arrivalTime:null!=t.attributes.ArrivalTime?new Date(t.attributes.ArrivalTime):null,arrivalTimeOffset:null!==(r=t.attributes.ArrivalUTCOffset)&&void 0!==r?r:null,azimuth:null!==(d=t.attributes.Azimuth)&&void 0!==d?d:null,branchName:null!==(b=t.attributes.BranchName)&&void 0!==b?b:null,directionPointType:n._6.fromJSON(t.attributes.DirectionPointType),displayText:null!==(O=t.attributes.DisplayText)&&void 0!==O?O:null,exitName:null!==(g=t.attributes.ExitName)&&void 0!==g?g:null,geometry:t.geometry,intersectingName:null!==(A=t.attributes.IntersectingName)&&void 0!==A?A:null,level:null!==(S=t.attributes.Level)&&void 0!==S?S:null,name:null!==(C=t.attributes.Name)&&void 0!==C?C:null,objectId:null!==(I=t.attributes.ObjectID)&&void 0!==I?I:t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,sequence:t.attributes.Sequence,shortVoiceInstruction:null!==(P=t.attributes.ShortVoiceInstruction)&&void 0!==P?P:null,stopId:null!==(j=t.attributes.StopID)&&void 0!==j?j:null,symbol:t.symbol,towardName:null!==(U=t.attributes.TowardName)&&void 0!==U?U:null,voiceInstruction:null!==(L=t.attributes.VoiceInstruction)&&void 0!==L?L:null})}toGraphic(){const t={ObjectID:this.objectId,DirectionPointType:null!=this.directionPointType?n._6.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return null!=this.alternateName&&(t.AlternateName=this.alternateName),null!=this.arrivalTime&&(t.ArrivalTime=this.arrivalTime.getTime()),null!=this.arrivalTimeOffset&&(t.ArrivalUTCOffset=this.arrivalTimeOffset),null!=this.azimuth&&(t.Azimuth=this.azimuth),null!=this.branchName&&(t.BranchName=this.branchName),null!=this.displayText&&(t.DisplayText=this.displayText),null!=this.exitName&&(t.ExitName=this.exitName),null!=this.intersectingName&&(t.IntersectingName=this.intersectingName),null!=this.level&&(t.Level=this.level),null!=this.name&&(t.Name=this.name),null!=this.shortVoiceInstruction&&(t.ShortVoiceInstruction=this.shortVoiceInstruction),null!=this.towardName&&(t.TowardName=this.towardName),null!=this.voiceInstruction&&(t.VoiceInstruction=this.voiceInstruction),new h.A({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};l.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],l.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.AlternateName"}}})],l.prototype,"alternateName",void 0),(0,e._)([(0,a.MZ)()],l.prototype,"arrivalTime",void 0),(0,e._)([(0,c.w)("arrivalTime",["attributes.ArrivalTime"])],l.prototype,"readArrivalTime",null),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],l.prototype,"arrivalTimeOffset",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.Azimuth"}}})],l.prototype,"azimuth",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.BranchName"}}})],l.prototype,"branchName",void 0),(0,e._)([(0,a.MZ)({type:n._6.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:n._6.read}}})],l.prototype,"directionPointType",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.DisplayText"}}})],l.prototype,"displayText",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.ExitName"}}})],l.prototype,"exitName",void 0),(0,e._)([(0,a.MZ)({type:p.A})],l.prototype,"geometry",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.IntersectingName"}}})],l.prototype,"intersectingName",void 0),(0,e._)([(0,a.MZ)()],l.prototype,"level",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.Name"}}})],l.prototype,"name",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.ObjectID"}}})],l.prototype,"objectId",void 0),(0,e._)([(0,a.MZ)({type:v.A})],l.prototype,"popupTemplate",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.Sequence"}}})],l.prototype,"sequence",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.ShortVoiceInstruction"}}})],l.prototype,"shortVoiceInstruction",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.StopID"}}})],l.prototype,"stopId",void 0),(0,e._)([(0,a.MZ)({types:y.Es})],l.prototype,"symbol",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.TowardName"}}})],l.prototype,"towardName",void 0),(0,e._)([(0,a.MZ)({readOnly:!0,json:{read:!1}})],l.prototype,"type",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.VoiceInstruction"}}})],l.prototype,"voiceInstruction",void 0),l=o=(0,e._)([(0,m.$)("esri.rest.support.DirectionPoint")],l);const s=l},23632:(N,T,i)=>{i.d(T,{A:()=>u});var s,e=i(8189),h=i(81098),v=i(92165),y=i(47280),E=i(90660),M=i(71065),a=i(85211),c=(i(3248),i(35150),i(40707),i(17221)),m=i(76576),p=i(50305),n=i(13303),o=i(50254),l=i(81401);let t=s=class extends((0,E.O)(M.oY)){constructor(r){super(r),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(r,d){return(0,o.lh)(d.attributes,"Attr_")}writeCosts(r,d){(0,o.p3)(r,d,"Attr_")}static fromGraphic(r){var d,b,O;return new s({addedCost:null!==(d=r.attributes.AddedCost)&&void 0!==d?d:null,barrierType:null!=r.attributes.BarrierType?l.iM.fromJSON(r.attributes.BarrierType):null,costs:null!=r.attributes.Costs?(0,o.aZ)(JSON.parse(r.attributes.Costs)):null,curbApproach:null!=r.attributes.CurbApproach?l.JJ.fromJSON(r.attributes.CurbApproach):null,fullEdge:null!=r.attributes.FullEdge?l.fe.fromJSON(r.attributes.FullEdge):null,geometry:r.geometry,name:null!==(b=r.attributes.Name)&&void 0!==b?b:null,objectId:null!==(O=r.attributes.ObjectID)&&void 0!==O?O:r.attributes.__OBJECTID,popupTemplate:r.popupTemplate,status:null!=r.attributes.Status?l.$r.fromJSON(r.attributes.Status):null,symbol:r.symbol})}toGraphic(){const r={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:null!=this.barrierType?l.iM.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify((0,o.nA)(this.costs)):null,CurbApproach:null!=this.curbApproach?l.JJ.toJSON(this.curbApproach):null,FullEdge:null!=this.fullEdge?l.fe.toJSON(this.fullEdge):null,Name:this.name,Status:null!=this.status?l.$r.toJSON(this.status):null};return new h.A({geometry:this.geometry,attributes:r,symbol:this.symbol,popupTemplate:this.popupTemplate})}};t.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],t.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,a.MZ)()],t.prototype,"addedCost",void 0),(0,e._)([(0,a.MZ)({type:l.iM.apiValues,json:{name:"attributes.BarrierType",read:{reader:l.iM.read},write:{writer:l.iM.write}}})],t.prototype,"barrierType",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"costs",void 0),(0,e._)([(0,c.w)("costs",["attributes"])],t.prototype,"readCosts",null),(0,e._)([(0,p.K)("costs")],t.prototype,"writeCosts",null),(0,e._)([(0,a.MZ)({constructOnly:!0,type:l.JJ.apiValues,json:{read:{source:"attributes.CurbApproach",reader:l.JJ.read}}})],t.prototype,"curbApproach",void 0),(0,e._)([(0,a.MZ)({type:l.fe.apiValues,json:{name:"attributes.FullEdge",read:{reader:l.fe.read},write:{writer:l.fe.write}}})],t.prototype,"fullEdge",void 0),(0,e._)([(0,a.MZ)({type:n.A,json:{write:!0}})],t.prototype,"geometry",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.Name"}})],t.prototype,"name",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.ObjectID"}})],t.prototype,"objectId",void 0),(0,e._)([(0,a.MZ)({type:v.A})],t.prototype,"popupTemplate",void 0),(0,e._)([(0,a.MZ)({type:l.mt.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:l.mt.read}}})],t.prototype,"sideOfEdge",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.SourceID"}}})],t.prototype,"sourceId",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.SourceOID"}}})],t.prototype,"sourceOid",void 0),(0,e._)([(0,a.MZ)({type:l.$r.apiValues,json:{read:{source:"attributes.Status",reader:l.$r.read}}})],t.prototype,"status",void 0),(0,e._)([(0,a.MZ)({types:y.Es})],t.prototype,"symbol",void 0),(0,e._)([(0,a.MZ)({readOnly:!0,json:{read:!1}})],t.prototype,"type",void 0),t=s=(0,e._)([(0,m.$)("esri.rest.support.PointBarrier")],t);const u=t},34720:(N,T,i)=>{i.d(T,{A:()=>u});var s,e=i(8189),h=i(81098),v=i(92165),y=i(47280),E=i(90660),M=i(71065),a=i(85211),c=(i(3248),i(35150),i(40707),i(17221)),m=i(76576),p=i(50305),n=i(55861),o=i(50254),l=i(81401);let t=s=class extends((0,E.O)(M.oY)){constructor(r){super(r),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(r,d){return(0,o.lh)(d.attributes,"Attr_")}writeCosts(r,d){(0,o.p3)(r,d,"Attr_")}static fromGraphic(r){var d,b,O;return new s({barrierType:null!=r.attributes.BarrierType?l.iM.fromJSON(r.attributes.BarrierType):null,costs:null!=r.attributes.Costs?(0,o.aZ)(JSON.parse(r.attributes.Costs)):null,geometry:r.geometry,name:null!==(d=r.attributes.Name)&&void 0!==d?d:null,objectId:null!==(b=r.attributes.ObjectID)&&void 0!==b?b:r.attributes.__OBJECTID,popupTemplate:r.popupTemplate,scaleFactor:null!==(O=r.attributes.ScaleFactor)&&void 0!==O?O:null,symbol:r.symbol})}toGraphic(){var r,d;const b={ObjectID:this.objectId,BarrierType:null!=this.barrierType?l.iM.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify((0,o.nA)(this.costs)):null,Name:null!==(r=this.name)&&void 0!==r?r:null,ScaleFactor:null!==(d=this.scaleFactor)&&void 0!==d?d:null};return new h.A({geometry:this.geometry,attributes:b,symbol:this.symbol,popupTemplate:this.popupTemplate})}};t.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],t.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,a.MZ)({type:l.iM.apiValues,json:{name:"attributes.BarrierType",read:{reader:l.iM.read},write:{writer:l.iM.write}}})],t.prototype,"barrierType",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"costs",void 0),(0,e._)([(0,c.w)("costs",["attributes"])],t.prototype,"readCosts",null),(0,e._)([(0,p.K)("costs")],t.prototype,"writeCosts",null),(0,e._)([(0,a.MZ)({type:n.A,json:{write:!0}})],t.prototype,"geometry",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.Name"}})],t.prototype,"name",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.ObjectID"}})],t.prototype,"objectId",void 0),(0,e._)([(0,a.MZ)({type:v.A})],t.prototype,"popupTemplate",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"scaleFactor",void 0),(0,e._)([(0,a.MZ)({types:y.Es})],t.prototype,"symbol",void 0),(0,e._)([(0,a.MZ)({readOnly:!0,json:{read:!1}})],t.prototype,"type",void 0),t=s=(0,e._)([(0,m.$)("esri.rest.support.PolygonBarrier")],t);const u=t},51882:(N,T,i)=>{i.d(T,{A:()=>t});var l,e=i(8189),h=i(81098),v=i(92165),y=i(47280),E=i(90660),M=i(71065),a=i(85211),c=(i(3248),i(35150),i(40707),i(17221)),m=i(76576),p=i(93615),n=i(50254),o=i(81401);let s=l=class extends((0,E.O)(M.oY)){constructor(u){super(u),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(u,r){return(0,n.lh)(r.attributes,"Attr_")}static fromGraphic(u){var r,d,b;return new l({barrierType:null!=u.attributes.BarrierType?o.iM.fromJSON(u.attributes.BarrierType):null,costs:null!=u.attributes.Costs?(0,n.aZ)(JSON.parse(u.attributes.Costs)):null,geometry:u.geometry,name:null!==(r=u.attributes.Name)&&void 0!==r?r:null,objectId:null!==(d=u.attributes.ObjectID)&&void 0!==d?d:u.attributes.__OBJECTID,popupTemplate:u.popupTemplate,scaleFactor:null!==(b=u.attributes.ScaleFactor)&&void 0!==b?b:null,symbol:u.symbol})}toGraphic(){const u={ObjectID:this.objectId,BarrierType:null!=this.barrierType?o.iM.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify((0,n.nA)(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new h.A({geometry:this.geometry,attributes:u,symbol:this.symbol,popupTemplate:this.popupTemplate})}};s.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],s.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,a.MZ)({type:o.iM.apiValues,json:{read:{source:"attributes.BarrierType",reader:o.iM.read}}})],s.prototype,"barrierType",void 0),(0,e._)([(0,a.MZ)()],s.prototype,"costs",void 0),(0,e._)([(0,c.w)("costs",["attributes"])],s.prototype,"readCosts",null),(0,e._)([(0,a.MZ)({type:p.A,json:{write:!0}})],s.prototype,"geometry",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.Name"}})],s.prototype,"name",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.ObjectID"}})],s.prototype,"objectId",void 0),(0,e._)([(0,a.MZ)({type:v.A})],s.prototype,"popupTemplate",void 0),(0,e._)([(0,a.MZ)()],s.prototype,"scaleFactor",void 0),(0,e._)([(0,a.MZ)({types:y.Es})],s.prototype,"symbol",void 0),(0,e._)([(0,a.MZ)({readOnly:!0,json:{read:!1}})],s.prototype,"type",void 0),s=l=(0,e._)([(0,m.$)("esri.rest.support.PolylineBarrier")],s);const t=s},22560:(N,T,i)=>{i.d(T,{A:()=>t});var l,e=i(8189),h=i(81098),v=i(92165),y=i(47280),E=i(90660),M=i(71065),a=i(85211),c=(i(3248),i(35150),i(40707),i(17221)),m=i(76576),p=i(93615),n=i(50254),o=i(20677);let s=l=class extends((0,E.O)(M.oY)){constructor(u){super(u),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(u,r){return null!=r.attributes.EndTimeUTC?new Date(r.attributes.EndTimeUTC):null}readEndTimeOffset(u,r){return(0,n.Zn)(r.attributes.EndTime,r.attributes.EndTimeUTC)}readStartTime(u,r){return null!=r.attributes.StartTimeUTC?new Date(r.attributes.StartTimeUTC):null}readStartTimeOffset(u,r){return(0,n.Zn)(r.attributes.StartTime,r.attributes.StartTimeUTC)}readTotalCosts(u,r){return(0,n.lh)(r.attributes,"Total_")}readTotalViolations(u,r){return(0,n.lh)(r.attributes,"TotalViolation_")}readTotalWait(u,r){return(0,n.lh)(r.attributes,"TotalWait_")}static fromGraphic(u){var r,d,b,O,g,A,S;return new l({analysisSettings:null!=u.attributes.AnalysisSettings?o.A.fromJSON(JSON.parse(u.attributes.AnalysisSettings)):null,endTime:null!=u.attributes.EndTime?new Date(u.attributes.EndTime):null,endTimeOffset:null!==(r=u.attributes.EndUTCOffset)&&void 0!==r?r:null,geometry:u.geometry,messages:null!=u.attributes.Messages?JSON.parse(u.attributes.Messages):null,name:u.attributes.RouteName,objectId:null!==(d=u.attributes.ObjectID)&&void 0!==d?d:u.attributes.__OBJECTID,popupTemplate:u.popupTemplate,startTime:null!=u.attributes.StartTime?new Date(u.attributes.StartTime):null,startTimeOffset:null!==(b=u.attributes.StartUTCOffset)&&void 0!==b?b:null,symbol:u.symbol,totalCosts:null!=u.attributes.TotalCosts?(0,n.aZ)(JSON.parse(u.attributes.TotalCosts)):null,totalDistance:null!==(O=u.attributes.TotalMeters)&&void 0!==O?O:null,totalDuration:null!==(g=u.attributes.TotalMinutes)&&void 0!==g?g:null,totalLateDuration:null!==(A=u.attributes.TotalLateMinutes)&&void 0!==A?A:null,totalWaitDuration:null!==(S=u.attributes.TotalWaitMinutes)&&void 0!==S?S:null,version:u.attributes.Version})}toGraphic(){const u={ObjectID:this.objectId,AnalysisSettings:null!=this.analysisSettings?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:null!=this.endTime?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:null!=this.messages?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:null!=this.startTime?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:null!=this.totalCosts?JSON.stringify((0,n.nA)(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new h.A({geometry:this.geometry,attributes:u,symbol:this.symbol,popupTemplate:this.popupTemplate})}};s.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],s.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,a.MZ)()],s.prototype,"analysisSettings",void 0),(0,e._)([(0,a.MZ)()],s.prototype,"endTime",void 0),(0,e._)([(0,c.w)("endTime",["attributes.EndTimeUTC"])],s.prototype,"readEndTime",null),(0,e._)([(0,a.MZ)()],s.prototype,"endTimeOffset",void 0),(0,e._)([(0,c.w)("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],s.prototype,"readEndTimeOffset",null),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.FirstStopID"}}})],s.prototype,"firstStopId",void 0),(0,e._)([(0,a.MZ)({type:p.A})],s.prototype,"geometry",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.LastStopID"}}})],s.prototype,"lastStopId",void 0),(0,e._)([(0,a.MZ)()],s.prototype,"messages",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.Name"}}})],s.prototype,"name",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.ObjectID"}}})],s.prototype,"objectId",void 0),(0,e._)([(0,a.MZ)({type:v.A})],s.prototype,"popupTemplate",void 0),(0,e._)([(0,a.MZ)()],s.prototype,"startTime",void 0),(0,e._)([(0,c.w)("startTime",["attributes.StartTimeUTC"])],s.prototype,"readStartTime",null),(0,e._)([(0,a.MZ)()],s.prototype,"startTimeOffset",void 0),(0,e._)([(0,c.w)("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],s.prototype,"readStartTimeOffset",null),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.StopCount"}}})],s.prototype,"stopCount",void 0),(0,e._)([(0,a.MZ)({types:y.Es})],s.prototype,"symbol",void 0),(0,e._)([(0,a.MZ)()],s.prototype,"totalCosts",void 0),(0,e._)([(0,c.w)("totalCosts",["attributes"])],s.prototype,"readTotalCosts",null),(0,e._)([(0,a.MZ)()],s.prototype,"totalDistance",void 0),(0,e._)([(0,a.MZ)()],s.prototype,"totalDuration",void 0),(0,e._)([(0,a.MZ)()],s.prototype,"totalLateDuration",void 0),(0,e._)([(0,a.MZ)()],s.prototype,"totalViolations",void 0),(0,e._)([(0,c.w)("totalViolations",["attributes"])],s.prototype,"readTotalViolations",null),(0,e._)([(0,a.MZ)()],s.prototype,"totalWait",void 0),(0,e._)([(0,c.w)("totalWait",["attributes"])],s.prototype,"readTotalWait",null),(0,e._)([(0,a.MZ)()],s.prototype,"totalWaitDuration",void 0),(0,e._)([(0,a.MZ)({readOnly:!0,json:{read:!1}})],s.prototype,"type",void 0),(0,e._)([(0,a.MZ)()],s.prototype,"version",void 0),s=l=(0,e._)([(0,m.$)("esri.rest.support.RouteInfo")],s);const t=s},20677:(N,T,i)=>{i.d(T,{A:()=>p});var e=i(8189),h=i(71065),v=i(85211),a=(i(3248),i(35150),i(40707),i(17221)),f=i(76576),D=i(50305),_=i(81401),c=i(36938);let m=class extends h.oY{constructor(n){super(n),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(n){return null==n?null:n.map(o=>_.et.fromJSON(o))}writeAccumulateAttributes(n,o,l){null!=n&&n.length&&(o[l]=n.map(s=>_.et.toJSON(s)))}};(0,e._)([(0,v.MZ)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],m.prototype,"accumulateAttributes",void 0),(0,e._)([(0,a.w)("accumulateAttributes")],m.prototype,"readAccumulateAttributes",null),(0,e._)([(0,D.K)("accumulateAttributes")],m.prototype,"writeAccumulateAttributes",null),(0,e._)([(0,v.MZ)({type:String,json:{write:!0}})],m.prototype,"directionsLanguage",void 0),(0,e._)([(0,v.MZ)({type:Boolean,json:{write:!0}})],m.prototype,"findBestSequence",void 0),(0,e._)([(0,v.MZ)({type:Boolean,json:{write:!0}})],m.prototype,"preserveFirstStop",void 0),(0,e._)([(0,v.MZ)({type:Boolean,json:{write:!0}})],m.prototype,"preserveLastStop",void 0),(0,e._)([(0,v.MZ)({type:Boolean,json:{write:!0}})],m.prototype,"startTimeIsUTC",void 0),(0,e._)([(0,v.MZ)({type:Boolean,json:{write:!0}})],m.prototype,"timeWindowsAreUTC",void 0),(0,e._)([(0,v.MZ)({type:c.A,json:{write:!0}})],m.prototype,"travelMode",void 0),m=(0,e._)([(0,f.$)("esri.layers.support.RouteSettings")],m);const p=m},48393:(N,T,i)=>{i.d(T,{A:()=>u});var s,e=i(8189),h=i(81098),v=i(92165),y=i(47280),E=i(90660),M=i(71065),a=i(85211),c=(i(3248),i(35150),i(40707),i(17221)),m=i(76576),p=i(50305),n=i(13303),o=i(50254),l=i(81401);let t=s=class extends((0,E.O)(M.oY)){constructor(r){super(r),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(r,d){return(0,o.Zn)(d.attributes.ArriveTime,d.attributes.ArriveTimeUTC)}readCumulativeCosts(r,d){return(0,o.lh)(d.attributes,"Cumul_")}readDepartTimeOffset(r,d){return(0,o.Zn)(d.attributes.DepartTime,d.attributes.DepartTimeUTC)}readServiceCosts(r,d){return(0,o.lh)(d.attributes,"Attr_")}writeServiceCosts(r,d){(0,o.p3)(r,d,"Attr_")}writeTimeWindowEnd(r,d){null!=r&&(d.attributes||(d.attributes={}),d.attributes.TimeWindowEnd=r.getTime())}writeTimeWindowStart(r,d){null!=r&&(d.attributes||(d.attributes={}),d.attributes.TimeWindowStart=r.getTime())}readViolations(r,d){return(0,o.lh)(d.attributes,"Violation_")}readWait(r,d){return(0,o.lh)(d.attributes,"Wait_")}static fromGraphic(r){var d,b,O,g,A,S,C,I,P,j,U;return new s({arriveCurbApproach:null!=r.attributes.ArrivalCurbApproach?l.JJ.fromJSON(r.attributes.ArrivalCurbApproach):null,arriveTime:null!=r.attributes.ArrivalTime?new Date(r.attributes.ArrivalTime):null,arriveTimeOffset:r.attributes.ArrivalUTCOffset,cumulativeCosts:null!=r.attributes.CumulativeCosts?(0,o.aZ)(JSON.parse(r.attributes.CumulativeCosts)):null,cumulativeDistance:null!==(d=r.attributes.CumulativeMeters)&&void 0!==d?d:null,cumulativeDuration:null!==(b=r.attributes.CumulativeMinutes)&&void 0!==b?b:null,curbApproach:null!=r.attributes.CurbApproach?l.JJ.fromJSON(r.attributes.CurbApproach):null,departCurbApproach:null!=r.attributes.DepartureCurbApproach?l.JJ.fromJSON(r.attributes.DepartureCurbApproach):null,departTime:null!=r.attributes.DepartureTime?new Date(r.attributes.DepartureTime):null,departTimeOffset:null!==(O=r.attributes.DepartureUTCOffset)&&void 0!==O?O:null,geometry:r.geometry,lateDuration:null!==(g=r.attributes.LateMinutes)&&void 0!==g?g:null,locationType:null!=r.attributes.LocationType?l.EM.fromJSON(r.attributes.LocationType):null,name:r.attributes.Name,objectId:null!==(A=r.attributes.ObjectID)&&void 0!==A?A:r.attributes.__OBJECTID,popupTemplate:r.popupTemplate,routeName:r.attributes.RouteName,sequence:null!==(S=r.attributes.Sequence)&&void 0!==S?S:null,serviceCosts:null!=r.attributes.ServiceCosts?(0,o.aZ)(JSON.parse(r.attributes.ServiceCosts)):null,serviceDistance:null!==(C=r.attributes.ServiceMeters)&&void 0!==C?C:null,serviceDuration:null!==(I=r.attributes.ServiceMinutes)&&void 0!==I?I:null,status:null!=r.attributes.Status?l.$r.fromJSON(r.attributes.Status):null,symbol:r.symbol,timeWindowEnd:null!=r.attributes.TimeWindowEnd?new Date(r.attributes.TimeWindowEnd):null,timeWindowEndOffset:null!==(P=r.attributes.TimeWindowEndUTCOffset)&&void 0!==P?P:null,timeWindowStart:null!=r.attributes.TimeWindowStart?new Date(r.attributes.TimeWindowStart):null,timeWindowStartOffset:null!==(j=r.attributes.TimeWindowStartUTCOffset)&&void 0!==j?j:null,waitDuration:null!==(U=r.attributes.WaitMinutes)&&void 0!==U?U:null})}toGraphic(){var r,d;const b={ObjectID:this.objectId,ArrivalCurbApproach:null!=this.arriveCurbApproach?l.JJ.toJSON(this.arriveCurbApproach):null,ArrivalTime:null!=this.arriveTime?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:null!=this.cumulativeCosts?JSON.stringify((0,o.nA)(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:null!=this.curbApproach?l.JJ.toJSON(this.curbApproach):null,DepartureCurbApproach:null!=this.departCurbApproach?l.JJ.toJSON(this.departCurbApproach):null,DepartureTime:null!=this.departTime?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:null!=this.locationType?l.EM.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:null!=this.serviceCosts?JSON.stringify((0,o.nA)(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:null!=this.status?l.$r.toJSON(this.status):null,TimeWindowEnd:null!=this.timeWindowEnd?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:null!==(r=this.timeWindowEndOffset)&&void 0!==r?r:this.arriveTimeOffset,TimeWindowStart:null!=this.timeWindowStart?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:null!==(d=this.timeWindowStartOffset)&&void 0!==d?d:this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new h.A({geometry:this.geometry,attributes:b,symbol:this.symbol,popupTemplate:this.popupTemplate})}};t.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],t.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,a.MZ)({type:l.JJ.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:l.JJ.read}}})],t.prototype,"arriveCurbApproach",void 0),(0,e._)([(0,a.MZ)({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],t.prototype,"arriveTime",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"arriveTimeOffset",void 0),(0,e._)([(0,c.w)("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],t.prototype,"readArriveTimeOffset",null),(0,e._)([(0,a.MZ)({json:{name:"attributes.Bearing",read:!1,write:!0}})],t.prototype,"bearing",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.BearingTol",read:!1,write:!0}})],t.prototype,"bearingTol",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"cumulativeCosts",void 0),(0,e._)([(0,c.w)("cumulativeCosts",["attributes"])],t.prototype,"readCumulativeCosts",null),(0,e._)([(0,a.MZ)()],t.prototype,"cumulativeDistance",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"cumulativeDuration",void 0),(0,e._)([(0,a.MZ)({type:l.JJ.apiValues,json:{name:"attributes.CurbApproach",read:{reader:l.JJ.read},write:{writer:l.JJ.write}}})],t.prototype,"curbApproach",void 0),(0,e._)([(0,a.MZ)({type:l.JJ.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:l.JJ.read}}})],t.prototype,"departCurbApproach",void 0),(0,e._)([(0,a.MZ)({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],t.prototype,"departTime",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"departTimeOffset",void 0),(0,e._)([(0,c.w)("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],t.prototype,"readDepartTimeOffset",null),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],t.prototype,"distanceToNetworkInMeters",void 0),(0,e._)([(0,a.MZ)({type:n.A,json:{write:!0}})],t.prototype,"geometry",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"lateDuration",void 0),(0,e._)([(0,a.MZ)({type:l.EM.apiValues,json:{name:"attributes.LocationType",read:{reader:l.EM.read},write:{writer:l.EM.write}}})],t.prototype,"locationType",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.Name"}})],t.prototype,"name",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.NavLatency",read:!1,write:!0}})],t.prototype,"navLatency",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.ObjectID"}})],t.prototype,"objectId",void 0),(0,e._)([(0,a.MZ)({type:v.A})],t.prototype,"popupTemplate",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.PosAlong"}}})],t.prototype,"posAlong",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.RouteName"}})],t.prototype,"routeName",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"serviceCosts",void 0),(0,e._)([(0,c.w)("serviceCosts",["attributes"])],t.prototype,"readServiceCosts",null),(0,e._)([(0,p.K)("serviceCosts")],t.prototype,"writeServiceCosts",null),(0,e._)([(0,a.MZ)()],t.prototype,"serviceDistance",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"serviceDuration",void 0),(0,e._)([(0,a.MZ)({json:{name:"attributes.Sequence"}})],t.prototype,"sequence",void 0),(0,e._)([(0,a.MZ)({type:l.mt.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:l.mt.read}}})],t.prototype,"sideOfEdge",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.SnapX"}}})],t.prototype,"snapX",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.SnapY"}}})],t.prototype,"snapY",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.SnapZ"}}})],t.prototype,"snapZ",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.SourceID"}}})],t.prototype,"sourceId",void 0),(0,e._)([(0,a.MZ)({json:{read:{source:"attributes.SourceOID"}}})],t.prototype,"sourceOid",void 0),(0,e._)([(0,a.MZ)({type:l.$r.apiValues,json:{read:{source:"attributes.Status",reader:l.$r.read}}})],t.prototype,"status",void 0),(0,e._)([(0,a.MZ)({types:y.Es})],t.prototype,"symbol",void 0),(0,e._)([(0,a.MZ)({type:Date,json:{name:"attributes.TimeWindowEnd"}})],t.prototype,"timeWindowEnd",void 0),(0,e._)([(0,p.K)("timeWindowEnd")],t.prototype,"writeTimeWindowEnd",null),(0,e._)([(0,a.MZ)()],t.prototype,"timeWindowEndOffset",void 0),(0,e._)([(0,a.MZ)({type:Date,json:{name:"attributes.TimeWindowStart"}})],t.prototype,"timeWindowStart",void 0),(0,e._)([(0,p.K)("timeWindowStart")],t.prototype,"writeTimeWindowStart",null),(0,e._)([(0,a.MZ)()],t.prototype,"timeWindowStartOffset",void 0),(0,e._)([(0,a.MZ)({readOnly:!0,json:{read:!1}})],t.prototype,"type",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"violations",void 0),(0,e._)([(0,c.w)("violations",["attributes"])],t.prototype,"readViolations",null),(0,e._)([(0,a.MZ)()],t.prototype,"waitDuration",void 0),(0,e._)([(0,a.MZ)()],t.prototype,"wait",void 0),(0,e._)([(0,c.w)("wait",["attributes"])],t.prototype,"readWait",null),t=s=(0,e._)([(0,m.$)("esri.rest.support.Stop")],t);const u=t},36938:(N,T,i)=>{i.d(T,{A:()=>n});var e=i(8189),h=i(90660),v=i(71065),y=i(85211),f=(i(3248),i(35150),i(40707),i(15463)),D=i(17221),_=i(76576),c=i(50305),m=i(81401);let p=class extends((0,h.O)(v.oY)){constructor(o){super(o),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(o,l){var s,t;return null!==(s=null!==(t=l.id)&&void 0!==t?t:l.itemId)&&void 0!==s?s:null}readRestrictionAttributes(o,l){const{restrictionAttributeNames:s}=l;return null==s?null:s.map(t=>m.OC.fromJSON(t))}writeRestrictionAttributes(o,l,s){null!=o&&(l[s]=o.map(t=>m.OC.toJSON(t)))}};(0,e._)([(0,y.MZ)({type:[Object],json:{write:!0}})],p.prototype,"attributeParameterValues",void 0),(0,e._)([(0,y.MZ)({type:String,json:{write:!0}})],p.prototype,"description",void 0),(0,e._)([(0,f.e)(m.dd,{ignoreUnknown:!1})],p.prototype,"distanceAttributeName",void 0),(0,e._)([(0,y.MZ)({type:String,json:{write:!0}})],p.prototype,"id",void 0),(0,e._)([(0,D.w)("id",["id","itemId"])],p.prototype,"readId",null),(0,e._)([(0,f.e)(m.et,{ignoreUnknown:!1})],p.prototype,"impedanceAttributeName",void 0),(0,e._)([(0,y.MZ)({type:String,json:{write:!0}})],p.prototype,"name",void 0),(0,e._)([(0,y.MZ)({type:[String],json:{write:!0}})],p.prototype,"restrictionAttributeNames",void 0),(0,e._)([(0,D.w)("restrictionAttributeNames")],p.prototype,"readRestrictionAttributes",null),(0,e._)([(0,c.K)("restrictionAttributeNames")],p.prototype,"writeRestrictionAttributes",null),(0,e._)([(0,y.MZ)({type:Number,json:{write:{allowNull:!0}}})],p.prototype,"simplificationTolerance",void 0),(0,e._)([(0,f.e)(m.hY)],p.prototype,"simplificationToleranceUnits",void 0),(0,e._)([(0,f.e)(m.Mm,{ignoreUnknown:!1})],p.prototype,"timeAttributeName",void 0),(0,e._)([(0,f.e)(m.ow)],p.prototype,"type",void 0),(0,e._)([(0,y.MZ)({type:Boolean,json:{write:!0}})],p.prototype,"useHierarchy",void 0),(0,e._)([(0,f.e)(m.hE)],p.prototype,"uturnAtJunctions",void 0),p=(0,e._)([(0,_.$)("esri.rest.support.TravelMode")],p);const n=p},81401:(N,T,i)=>{i.d(T,{$n:()=>d,$r:()=>o,EM:()=>n,Ec:()=>P,JJ:()=>p,Mm:()=>O,OC:()=>A,Sr:()=>a,Vj:()=>C,WU:()=>I,Z7:()=>v,_6:()=>u,aJ:()=>M,dd:()=>b,dn:()=>E,et:()=>g,fe:()=>t,gD:()=>r,hE:()=>D,hY:()=>h,iM:()=>s,mt:()=>l,ow:()=>m,vS:()=>S});var e=i(49976);const h=(0,e.O)()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),v=(0,e.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),E=((0,e.O)()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),(0,e.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"})),M=(0,e.O)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),a=(0,e.O)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),D=((0,e.O)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,e.O)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),m=((0,e.O)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,e.O)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,e.O)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"})),p=(0,e.O)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),n=(0,e.O)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),o=(0,e.O)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),l=(0,e.O)()({1:"right",2:"left"},{useNumericKeys:!0}),s=(0,e.O)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),t=(0,e.O)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),u=(0,e.O)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),r=(0,e.O)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),d=(0,e.O)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),b=(0,e.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),O=(0,e.O)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),g=(0,e.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),A=(0,e.O)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),S=(0,e.O)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),C=(0,e.O)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),I=(0,e.O)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),P=(0,e.O)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})}}]);