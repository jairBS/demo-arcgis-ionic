"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[7985],{27985:(v,p,n)=>{n.r(p),n.d(p,{execute:()=>b});var d=n(10467),_=n(5922);function b(o,a){let e=a.responseType;e?"array-buffer"!==e&&"blob"!==e&&"json"!==e&&"native"!==e&&"native-request-init"!==e&&"text"!==e&&(e="text"):e="json",a.responseType=e;const f=a.signal;return delete a.signal,globalThis.invokeStaticMessage("request",{url:o,options:a},{signal:f}).then(function(){var h=(0,d.A)(function*(t){let l,r,i,c,s;if(t.data)if(t.data instanceof ArrayBuffer){if(!("json"!==e&&"text"!==e&&"blob"!==e||(l=new Blob([t.data]),"json"!==e&&"text"!==e||(c=yield l.text(),"json"!==e)))){try{r=JSON.parse(c||null)}catch(u){const O={...u,url:o,requestOptions:a};throw new _.A("request:server",u.message,O)}if(r.error){const u={...r.error,url:o,requestOptions:a};throw new _.A("request:server",r.error.message,u)}}}else"native"===e&&(t.data.signal=f,i=yield fetch(t.data.url,t.data),t.httpStatus=i.status);switch(e){case"blob":s=l;break;case"json":s=r;break;case"native":s=i;break;case"text":s=c;break;default:s=t.data}return{data:s,httpStatus:t.httpStatus,requestOptions:a,ssl:t.ssl,url:o}});return function(t){return h.apply(this,arguments)}}())}}}]);