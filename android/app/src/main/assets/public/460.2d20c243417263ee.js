"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[460],{40460:(H,M,t)=>{t.r(M),t.d(M,{default:()=>F});var y,f=t(10467),o=t(8189),d=t(89563),h=t(5922),m=t(4879),A=t(39693),g=t(56492),u=t(45272),n=t(85211),S=t(48669),U=(t(40707),t(3248),t(17221)),R=t(76576),L=t(50305),O=t(32034),C=t(95478),I=t(94376),W=t(73474),B=t(50630),j=t(25936),K=t(93410),x=t(23e3),Z=t(17049),N=t(85551),$=t(1151),G=t(33036),J=t(58993),v=t(68438),V=t(81687),P=t(63014),b=t(49498);const D=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let a=y=class extends((0,K.d)((0,G.j)((0,J.I)((0,W.f)((0,B.V)((0,Z.q)((0,N.A)((0,j.b)((0,A.P)((0,$.J)((0,I.p)((0,x.d)(C.A))))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return"string"==typeof e?{url:e,...r}:e}load(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(g.QP).then(()=>this._fetchService(r))),Promise.resolve(this)}get attributionDataUrl(){var e;const r=null===(e=this.parsedUrl)||void 0===e?void 0:e.path.toLowerCase();return r?this._getDefaultAttribution(this._getMapName(r)):null}readSpatialReference(e,r){var s;return(e=e||(null===(s=r.tileInfo)||void 0===s?void 0:s.spatialReference))&&O.A.fromJSON(e)}writeSublayers(e,r,s,i){if(!this.loaded||!e)return;const _=e.slice().reverse().flatten(({sublayers:l})=>l&&l.toArray().reverse()).toArray(),p=[],c={writeSublayerStructure:!1,...i};_.forEach(l=>{const E=l.write({},c);p.push(E)}),p.some(l=>Object.keys(l).length>1)&&(r.layers=p)}get tileServers(){var e;return this._getDefaultTileServers(null===(e=this.parsedUrl)||void 0===e?void 0:e.path)}castTileServers(e){return Array.isArray(e)?e.map(r=>(0,u.An)(r).path):null}fetchTile(e,r,s,i={}){const{signal:_}=i,p=this.getTileUrl(e,r,s),c={responseType:"image",signal:_,query:{...this.refreshParameters}};return(0,d.A)(p,c).then(l=>l.data)}fetchImageBitmapTile(e,r,s,i={}){var _=this;return(0,f.A)(function*(){const{signal:p}=i;if(_.fetchTile!==y.prototype.fetchTile){const z=yield _.fetchTile(e,r,s,i);return(0,P.C)(z,e,r,s,p)}const c=_.getTileUrl(e,r,s),l={responseType:"blob",signal:p,query:{..._.refreshParameters}},{data:E}=yield(0,d.A)(c,l);return(0,P.C)(E,e,r,s,p)})()}getTileUrl(e,r,s){var i,_;const c=(0,u.x0)({...null===(i=this.parsedUrl)||void 0===i?void 0:i.query,blankTile:!(!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile)&&null,...this.customParameters,token:this.apiKey}),l=this.tileServers;return`${l&&l.length?l[r%l.length]:null===(_=this.parsedUrl)||void 0===_?void 0:_.path}/tile/${e}/${r}/${s}${c?"?"+c:""}`}loadAll(){return(0,m.g)(this,e=>{e(this.allSublayers)})}_fetchService(e){return new Promise((r,s)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new h.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new h.A("tile-layer:undefined-url","layer's url is not defined");const i=(0,v.qg)(this.parsedUrl.path);if(null!=i&&"ImageServer"===i.serverType)throw new h.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,d.A)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,s)}).then(r=>{let s=this.url;if(r.ssl&&(s=this.url=s.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,v.Wo)(s))return this._fetchServerVersion(s,e).then(i=>{this.read({currentVersion:i})}).catch(()=>{})})}_fetchServerVersion(e,r){if(!(0,v.Fi)(e))return Promise.reject();const s=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,d.A)(s,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(i=>{if(i.data&&i.data.currentVersion)return i.data.currentVersion;throw new h.A("tile-layer:version-not-available")})}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(null==e)return null;let r;e=e.toLowerCase();for(let s=0,i=D.length;s<i;s++)if(r=D[s],r.toLowerCase().includes(e))return(0,u.s2)("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(null==e)return[];const r=-1!==e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),s=-1!==e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return r||s?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[T]}};(0,o._)([(0,n.MZ)({readOnly:!0})],a.prototype,"attributionDataUrl",null),(0,o._)([(0,n.MZ)({type:["show","hide","hide-children"]})],a.prototype,"listMode",void 0),(0,o._)([(0,n.MZ)({json:{read:!0,write:!0}})],a.prototype,"blendMode",void 0),(0,o._)([(0,n.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],a.prototype,"isReference",void 0),(0,o._)([(0,n.MZ)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],a.prototype,"operationalLayerType",void 0),(0,o._)([(0,n.MZ)({type:Boolean})],a.prototype,"resampling",void 0),(0,o._)([(0,n.MZ)()],a.prototype,"sourceJSON",void 0),(0,o._)([(0,n.MZ)({type:O.A})],a.prototype,"spatialReference",void 0),(0,o._)([(0,U.w)("spatialReference",["spatialReference","tileInfo"])],a.prototype,"readSpatialReference",null),(0,o._)([(0,n.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),(0,o._)([(0,n.MZ)({readOnly:!0})],a.prototype,"sublayers",void 0),(0,o._)([(0,L.K)("sublayers",{layers:{type:[b.A]}})],a.prototype,"writeSublayers",null),(0,o._)([(0,n.MZ)({json:{read:!1,write:!1}})],a.prototype,"popupEnabled",void 0),(0,o._)([(0,n.MZ)()],a.prototype,"tileServers",null),(0,o._)([(0,S.w)("tileServers")],a.prototype,"castTileServers",null),(0,o._)([(0,n.MZ)({readOnly:!0,json:{read:!1}})],a.prototype,"type",void 0),(0,o._)([(0,n.MZ)(V.OZ)],a.prototype,"url",void 0),a=y=(0,o._)([(0,R.$)("esri.layers.TileLayer")],a);const T=Symbol("default-fetch-tile");a.prototype.fetchTile[T]=!0;const F=a}}]);