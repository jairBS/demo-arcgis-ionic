"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[9642],{66234:(Pt,At,tt)=>{tt.d(At,{A:()=>gt});var z=tt(8189),yt=tt(5922),pt=tt(71065),dt=tt(77806),mt=tt(35150),X=tt(85211),xt=tt(48669),Q=tt(76576);class ht{constructor(U=null,N=null,K=null){this.minValue=U,this.maxValue=N,this.noDataValue=K}}var ft,ct=tt(96115);let st=ft=class extends pt.oY{static createEmptyBand(P,U){return new(ft.getPixelArrayConstructor(P))(U)}static combineBandMasks(P){if(P.length<2)return P[0];const U=P[0].length,N=new Uint8Array(U).fill(255);for(let K=0;K<P.length;K++){const G=P[K];for(let V=0;V<U;V++)G[V]||(N[V]=0)}return N}static getPixelArrayConstructor(P){let U;switch(P){case"u1":case"u2":case"u4":case"u8":U=Uint8Array;break;case"u16":U=Uint16Array;break;case"u32":U=Uint32Array;break;case"s8":U=Int8Array;break;case"s16":U=Int16Array;break;case"s32":U=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":U=Float32Array;break;case"f64":U=Float64Array}return U}constructor(P){super(P),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(P){if(!P)return"f32";let U=P.toLowerCase();return["u1","u2","u4"].includes(U)?U="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(U)||(U="f32"),U}getPlaneCount(){var P;return null===(P=this.pixels)||void 0===P?void 0:P.length}addData(P){var U;if(!P.pixels||P.pixels.length!==this.width*this.height)throw new yt.A("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(P.pixels),this.statistics.push(null!==(U=P.statistics)&&void 0!==U?U:new ht)}getAsRGBA(){const P=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(P);break;default:this._fillFrom8Bit(P)}return new Uint8ClampedArray(P)}getAsRGBAFloat(){const P=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(P),P}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map(N=>this._calculateBandStatistics(N,this.mask));const P=this.mask;let U=0;if(null!=P)for(let N=0;N<P.length;N++)P[N]&&U++;else U=this.width*this.height;this.validPixelCount=U}clamp(P){if(!P||"f64"===P||"f32"===P||!this.pixels)return;const[U,N]=(0,ct.hP)(P),K=this.pixels,G=this.width*this.height,V=K.length;let F,H,W;const Y=[];for(let nt=0;nt<V;nt++){W=ft.createEmptyBand(P,G),F=K[nt];for(let ot=0;ot<G;ot++)H=F[ot],W[ot]=H>N?N:H<U?U:H;Y.push(W)}this.pixels=Y,this.pixelType=P}extractBands(P){var U;const{pixels:N,statistics:K}=this;if(null==P||0===P.length||!N||0===N.length)return this;const G=N.length,V=P.some(B=>B>=N.length),F=G===P.length&&!P.some((B,k)=>B!==k);if(V||F)return this;const H=(null===(U=this.bandMasks)||void 0===U?void 0:U.length)===G?P.map(B=>this.bandMasks[B]):void 0;let{mask:W,validPixelCount:Y}=this;const{width:nt,height:ot}=this;return null!=H&&H.length&&(W=ft.combineBandMasks(H),Y=W.filter(B=>!!B).length),new ft({pixelType:this.pixelType,width:nt,height:ot,mask:W,bandMasks:H,validPixelCount:Y,maskIsAlpha:this.maskIsAlpha,pixels:P.map(B=>N[B]),statistics:K&&P.map(B=>K[B])})}clone(){const P=new ft({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let U;null!=this.mask&&(P.mask=this.mask instanceof Uint8Array?new Uint8Array(this.mask):this.mask.slice(0)),this.bandMasks&&(P.bandMasks=this.bandMasks.map(K=>new Uint8Array(K)));const N=ft.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){P.pixels=[];const K=!!this.pixels[0].slice;for(U=0;U<this.pixels.length;U++)P.pixels[U]=K?this.pixels[U].slice(0,this.pixels[U].length):new N(this.pixels[U])}if(this.statistics)for(P.statistics=[],U=0;U<this.statistics.length;U++)P.statistics[U]=(0,dt.o8)(this.statistics[U]);return P.premultiplyAlpha=this.premultiplyAlpha,P}_fillFrom8Bit(P){const{mask:U,maskIsAlpha:N,premultiplyAlpha:K,pixels:G}=this;if(!P||null==G||!G.length)return void mt.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let V,F,H,W;V=F=H=G[0],G.length>=3?(F=G[1],H=G[2]):2===G.length&&(F=G[1]);const Y=new Uint32Array(P),nt=this.width*this.height;if(V.length===nt)if(null!=U&&U.length===nt)if(N)for(W=0;W<nt;W++){const ot=U[W];if(ot){const B=ot/255;Y[W]=K?ot<<24|H[W]*B<<16|F[W]*B<<8|V[W]*B:ot<<24|H[W]<<16|F[W]<<8|V[W]}}else for(W=0;W<nt;W++)U[W]&&(Y[W]=255<<24|H[W]<<16|F[W]<<8|V[W]);else for(W=0;W<nt;W++)Y[W]=255<<24|H[W]<<16|F[W]<<8|V[W];else mt.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(P){const{pixels:U,mask:N,statistics:K}=this;if(!P||null==U||!U.length)return void mt.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const G=this.pixelType;let V=1,F=0,H=1;if(K&&K.length>0){for(const S of K)null!=S.minValue&&(F=Math.min(F,S.minValue)),null!=S.maxValue&&null!=S.minValue&&(H=Math.max(H,S.maxValue-S.minValue));V=255/H}else{let S=255;"s8"===G?(F=-128,S=127):"u16"===G?S=65535:"s16"===G?(F=-32768,S=32767):"u32"===G?S=4294967295:"s32"===G?(F=-2147483648,S=2147483647):"f32"===G?(F=-34e38,S=34e38):"f64"===G&&(F=-Number.MAX_VALUE,S=Number.MAX_VALUE),V=255/(S-F)}const W=new Uint32Array(P),Y=this.width*this.height;let nt,ot,B,k,O;if(nt=ot=B=U[0],nt.length!==Y)return mt.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(U.length>=2)if(ot=U[1],U.length>=3&&(B=U[2]),null!=N&&N.length===Y)for(k=0;k<Y;k++)N[k]&&(W[k]=255<<24|(B[k]-F)*V<<16|(ot[k]-F)*V<<8|(nt[k]-F)*V);else for(k=0;k<Y;k++)W[k]=255<<24|(B[k]-F)*V<<16|(ot[k]-F)*V<<8|(nt[k]-F)*V;else if(null!=N&&N.length===Y)for(k=0;k<Y;k++)O=(nt[k]-F)*V,N[k]&&(W[k]=255<<24|O<<16|O<<8|O);else for(k=0;k<Y;k++)O=(nt[k]-F)*V,W[k]=255<<24|O<<16|O<<8|O}_fillFrom32Bit(P){const{pixels:U,mask:N}=this;if(!P||null==U||!U.length)return mt.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let K,G,V,F;K=G=V=U[0],U.length>=3?(G=U[1],V=U[2]):2===U.length&&(G=U[1]);const H=this.width*this.height;if(K.length!==H)return mt.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let W=0;if(null!=N&&N.length===H)for(F=0;F<H;F++)P[W++]=K[F],P[W++]=G[F],P[W++]=V[F],P[W++]=1&N[F];else for(F=0;F<H;F++)P[W++]=K[F],P[W++]=G[F],P[W++]=V[F],P[W++]=1}_calculateBandStatistics(P,U){let N=1/0,K=-1/0;const G=P.length;let V,F=0;if(null!=U)for(V=0;V<G;V++)U[V]&&(F=P[V],N=F<N?F:N,K=F>K?F:K);else for(V=0;V<G;V++)F=P[V],N=F<N?F:N,K=F>K?F:K;return new ht(N,K)}};(0,z._)([(0,X.MZ)({json:{write:!0}})],st.prototype,"width",void 0),(0,z._)([(0,X.MZ)({json:{write:!0}})],st.prototype,"height",void 0),(0,z._)([(0,X.MZ)({json:{write:!0}})],st.prototype,"pixelType",void 0),(0,z._)([(0,xt.w)("pixelType")],st.prototype,"castPixelType",null),(0,z._)([(0,X.MZ)({json:{write:!0}})],st.prototype,"validPixelCount",void 0),(0,z._)([(0,X.MZ)({json:{write:!0}})],st.prototype,"mask",void 0),(0,z._)([(0,X.MZ)({json:{write:!0}})],st.prototype,"maskIsAlpha",void 0),(0,z._)([(0,X.MZ)({json:{write:!0}})],st.prototype,"pixels",void 0),(0,z._)([(0,X.MZ)()],st.prototype,"premultiplyAlpha",void 0),(0,z._)([(0,X.MZ)({json:{write:!0}})],st.prototype,"statistics",void 0),(0,z._)([(0,X.MZ)({json:{write:!0}})],st.prototype,"depthCount",void 0),(0,z._)([(0,X.MZ)({json:{write:!0}})],st.prototype,"noDataValues",void 0),(0,z._)([(0,X.MZ)({json:{write:!0}})],st.prototype,"bandMasks",void 0),st=ft=(0,z._)([(0,Q.$)("esri.layers.support.PixelBlock")],st);const gt=st},96115:(Pt,At,tt)=>{tt.d(At,{Sp:()=>xt,X1:()=>mt,hP:()=>dt,zw:()=>X});const z=9999999e31,yt=2e-7,pt={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function dt(Q){var ht;return null!==(ht=pt[Q])&&void 0!==ht?ht:[-34028234663852886e22,34028234663852886e22]}function mt(Q,ht){return null==Q||null==ht?"s32":Q<0?Q>=-128&&ht<128?"s8":Q>=-32768&&ht<32768?"s16":"s32":ht<256?"u8":ht<65536?"u16":"u32"}function X(Q){var ht;return null!==(ht=(null==Q?void 0:Q.startsWith("s"))||(null==Q?void 0:Q.startsWith("u")))&&void 0!==ht&&ht}function xt(Q,ht,ct){var ft,st;if(Q.depthCount&&Q.depthCount>1)return;const{pixels:gt,statistics:P,pixelType:U}=Q,K=null!==(ft=Q.bandMasks)&&void 0!==ft?ft:[],G=null!==(st=Q.mask)&&void 0!==st?st:new Uint8Array(gt[0].length).fill(255),V="f32"===U||"f64"===U,F=dt(U);let H=!1;for(let B=0;B<gt.length;B++){var W,Y,nt,ot;const k="number"==typeof ht?ht:ht[B];if(null==k)continue;const O=null!==(W=null==P||null===(Y=P[B])||void 0===Y?void 0:Y.minValue)&&void 0!==W?W:F[0],S=null!==(nt=null==P||null===(ot=P[B])||void 0===ot?void 0:ot.maxValue)&&void 0!==nt?nt:F[1];if(O>k+Number.EPSILON||S<k-Number.EPSILON)continue;const L=K[B]||G.slice(),d=gt[B],A=null==ct?void 0:ct.customFloatTolerance;if(V&&0!==A){let m=A;m||(m=Math.abs(k)>=z?yt*Math.abs(k):"f32"===U?2**-23:Number.EPSILON);for(let v=0;v<d.length;v++)L[v]&&Math.abs(d[v]-k)<m&&(d[v]=0,L[v]=0,G[v]=0,H=!0)}else for(let m=0;m<d.length;m++)L[m]&&d[m]===k&&(d[m]=0,L[m]=0,G[m]=0,H=!0);K[B]=L}H&&(Q.bandMasks=Q.bandMasks||Q.pixels.length>1?K:null,Q.mask=G),H&&"updateStatistics"in Q&&Q.updateStatistics()}},40275:(Pt,At,tt)=>{tt.d(At,{$i:()=>T,AB:()=>X,Ew:()=>P,Hx:()=>gt,IB:()=>pt,J$:()=>v,LY:()=>W,QF:()=>y,UK:()=>st,Wb:()=>dt,Wt:()=>F,Wy:()=>Q,XU:()=>V,dK:()=>G,eH:()=>ft,et:()=>mt,lD:()=>m,qL:()=>ct,z$:()=>B,z7:()=>nt,zg:()=>ht});var pt,dt,e,z=tt(66234),yt=tt(96115);(e=pt||(pt={}))[e.matchAny=0]="matchAny",e[e.matchAll=1]="matchAll",function(e){e[e.bestMatch=0]="bestMatch",e[e.fail=1]="fail"}(dt||(dt={}));const mt=6;function X(e){return null!=e&&"esri.layers.support.PixelBlock"===e.declaredClass&&e.pixels&&e.pixels.length>0}function Q(e){var n,t;if(null==e||!e.length||e.some(c=>!X(c)))return null;if(1===e.length)return null!==(n=null===(t=e[0])||void 0===t?void 0:t.clone())&&void 0!==n?n:null;const l=e,{width:s,height:o,pixelType:a}=l[0];if(l.some(c=>c.width!==s||c.height!==o))return null;const h=l.map(({mask:c})=>c).filter(c=>null!=c);let u=null;h.length&&(u=new Uint8Array(s*o),u.set(h[0]),h.length>1&&K(h.slice(1),u));const r=[];l.forEach(({pixels:c})=>r.push(...c));const i=l.map(({statistics:c})=>c).filter(c=>null==c?void 0:c.length),f=[];return i.forEach(c=>f.push(...c)),new z.A({pixelType:a,width:s,height:o,mask:u,pixels:r,statistics:f.length?f:null})}function ht(e){if(!e)return;const n=e.colormap;if(!n||0===n.length)return;const t=n.sort((f,c)=>f[0]-c[0]);let l=0;t[0][0]<0&&(l=t[0][0]);const s=Math.max(256,t[t.length-1][0]-l+1),o=new Uint8Array(4*s),a=[];let h,u=0,r=0;const i=5===t[0].length;if(s>65536)return t.forEach(f=>{a[f[0]-l]=i?f.slice(1):f.slice(1).concat([255])}),{indexed2DColormap:a,offset:l,alphaSpecified:i};if(e.fillUnspecified)for(h=t[r],u=h[0]-l;u<s;u++)o[4*u]=h[1],o[4*u+1]=h[2],o[4*u+2]=h[3],o[4*u+3]=i?h[4]:255,u===h[0]-l&&(h=r===t.length-1?h:t[++r]);else for(u=0;u<t.length;u++)h=t[u],r=4*(h[0]-l),o[r]=h[1],o[r+1]=h[2],o[r+2]=h[3],o[r+3]=i?h[4]:255;return{indexedColormap:o,offset:l,alphaSpecified:i}}function ct(e,n){if(!X(e)||!n||!n.indexedColormap&&!n.indexed2DColormap)return e;const t=e.clone(),l=t.pixels;let s=t.mask;const o=t.width*t.height;if(1!==l.length)return e;const{indexedColormap:a,indexed2DColormap:h,offset:u,alphaSpecified:r}=n;let i=0;const f=l[0],c=new Uint8Array(f.length),p=new Uint8Array(f.length),g=new Uint8Array(f.length);let w,M=0;if(a){const _=a.length-1;if(null!=s)for(i=0;i<o;i++)s[i]&&(M=4*(f[i]-u),M<u||M>_?s[i]=0:(c[i]=a[M],p[i]=a[M+1],g[i]=a[M+2],s[i]=a[M+3]));else{for(s=new Uint8Array(o),i=0;i<o;i++)M=4*(f[i]-u),M<u||M>_?s[i]=0:(c[i]=a[M],p[i]=a[M+1],g[i]=a[M+2],s[i]=a[M+3]);t.mask=s}}else if(h)if(null!=s)for(i=0;i<o;i++)s[i]&&(w=h[f[i]],c[i]=w[0],p[i]=w[1],g[i]=w[2],s[i]=w[3]);else{for(s=new Uint8Array(o),i=0;i<o;i++)w=h[f[i]],c[i]=w[0],p[i]=w[1],g[i]=w[2],s[i]=w[3];t.mask=s}return t.pixels=[c,p,g],t.statistics=null,t.pixelType="u8",t.maskIsAlpha=r,t}function ft(e,n){if(!X(e))return null;const{pixels:t,mask:l}=e,s=t.length;let o=n.lut;const{offset:a}=n;o&&1===o[0].length&&(o=t.map(()=>o));const h=[],u=n.outputPixelType||"u8";for(let i=0;i<s;i++){const f=st(t[i],l,o[i],a||0,u);h.push(f)}const r=new z.A({width:e.width,height:e.height,pixels:h,mask:l,pixelType:u});return r.updateStatistics(),r}function st(e,n,t,l,s){const o=e.length,a=z.A.createEmptyBand(s,o);if(n)for(let h=0;h<o;h++)n[h]&&(a[h]=t[e[h]-l]);else for(let h=0;h<o;h++)a[h]=t[e[h]-l];return a}function gt(e,n){if(!X(e))return null;const t=e.clone(),{pixels:l}=t,s=t.width*t.height,o=n.length,a=Math.floor(o/2),h=n[Math.floor(a)],u=l[0];let r,i,f,c,p,g,w=!1;const M=new Uint8Array(s),_=new Uint8Array(s),I=new Uint8Array(s);let b=t.mask;const E=4===n[0].mappedColor.length;for(b||(b=new Uint8Array(s),b.fill(E?255:1),t.mask=b),p=0;p<s;p++)if(b[p]){for(r=u[p],w=!1,g=a,i=h,f=0,c=o-1;c-f>1;){if(r===i.value){w=!0;break}r>i.value?f=g:c=g,g=Math.floor((f+c)/2),i=n[Math.floor(g)]}w||(r===n[f].value?(i=n[f],w=!0):r===n[c].value?(i=n[c],w=!0):r<n[f].value?(w=!1,i=null):r>n[f].value&&(r<n[c].value?(i=n[f],w=!0):c===o-1?(w=!1,i=null):(i=n[c],w=!0))),w?(M[p]=i.mappedColor[0],_[p]=i.mappedColor[1],I[p]=i.mappedColor[2],b[p]=i.mappedColor[3]):M[p]=_[p]=I[p]=b[p]=0}return t.pixels=[M,_,I],t.mask=b,t.pixelType="u8",t.maskIsAlpha=E,t}function P(e,n){if(!X(e))return null;const{width:t,height:l}=e,{inputRanges:s,outputValues:o,outputPixelType:a,noDataRanges:h,allowUnmatched:u,isLastInputRangeInclusive:r}=n,i=e.pixels[0],f=z.A.createEmptyBand(a,i.length),c=e.mask,p=new Uint8Array(t*l);c?p.set(c):p.fill(255);const g=e.pixelType.startsWith("f")?1e-6:0,w=s.map(E=>E-g);w[0]=s[0],w[w.length-1]=s[s.length-1]+(r?1e-6:0);const M=s.length/2,[_,I]=(0,yt.hP)(a);for(let E=0;E<l;E++)for(let C=0;C<t;C++){const D=E*t+C;if(p[D]){const j=i[D];let q=!1;for(let Z=M-1;Z>=0;Z--)if(j===w[2*Z]||j>w[2*Z]&&j<w[2*Z+1]){f[D]=o[Z],q=!0;break}q||(u?f[D]=j>I?I:j<_?_:j:p[D]=0)}}const b=null==h?void 0:h.length;if(b)for(let E=0;E<l;E++)for(let C=0;C<t;C++){const D=E*t+C;if(!c||c[D]){const j=i[D];for(let q=0;q<b;q+=2)if(j>=h[q]&&j<=h[q+1]){f[D]=0,p[D]=0;break}}}return new z.A({width:t,height:l,pixelType:a,pixels:[f],mask:p})}function U(e,n,t,l){const s=null!=t&&t.length>=2?new Set(t):null,o=1===(null==t?void 0:t.length)?t[0]:null,a=!(null==n||!n.length);for(let h=0;h<e.length;h++)if(l[h]){const u=e[h];if(a){let r=!1;for(let i=0;i<n.length;i+=2)if(u>=n[i]&&u<=n[i+1]){r=!0;break}r||(l[h]=0)}l[h]&&(u===o||null!=s&&s.has(u))&&(l[h]=0)}}function N(e,n){const t=e[0].length;for(let l=0;l<t;l++)if(n[l]){let s=!1;for(let o=0;o<e.length;o++)if(e[o][l]){s=!0;break}s||(n[l]=0)}}function K(e,n){const t=e[0].length;for(let l=0;l<t;l++)if(n[l]){let s=!1;for(let o=0;o<e.length;o++)if(0===e[o][l]){s=!0;break}s&&(n[l]=0)}}function G(e,n){if(!X(e))return null;const{width:t,height:l,pixels:s}=e,o=t*l,a=new Uint8Array(o);e.mask?a.set(e.mask):a.fill(255);const h=s.length,{includedRanges:u,noDataValues:r,outputPixelType:i,matchAll:f,lookups:c}=n;if(c){const p=[];for(let g=0;g<h;g++){const w=c[g],M=st(s[g],a,w.lut,w.offset||0,"u8");p.push(M)}1===p.length?a.set(p[0]):f?N(p,a):K(p,a)}else if(f){const p=[];for(let g=0;g<h;g++){const w=new Uint8Array(o);w.set(a),U(s[g],null==u?void 0:u.slice(2*g,2*g+2),null==r?void 0:r[g],w),p.push(w)}1===p.length?a.set(p[0]):N(p,a)}else for(let p=0;p<h;p++)U(s[p],null==u?void 0:u.slice(2*p,2*p+2),null==r?void 0:r[p],a);return new z.A({width:t,height:l,pixelType:i,pixels:s,mask:a})}function V(e){const{srcPixelType:n,inputRanges:t,outputValues:l,allowUnmatched:s,noDataRanges:o,isLastInputRangeInclusive:a,outputPixelType:h}=e;if("u8"!==n&&"s8"!==n&&"u16"!==n&&"s16"!==n)return null;const u=n.includes("16")?65536:256,r=n.includes("s")?-u/2:0,i=z.A.createEmptyBand(h,u),f=new Uint8Array(u);s&&f.fill(255);const[c,p]=(0,yt.hP)(h);if(null!=t&&t.length&&null!=l&&l.length){const w=t.map(M=>M-1e-6);w[0]=t[0],a&&(w[w.length-1]=t[t.length-1]);for(let M=0;M<w.length;M++){const _=l[M]>p?p:l[M]<c?c:l[M],I=Math.ceil(w[2*M]-r),b=Math.floor(w[2*M+1]-r);for(let E=I;E<=b;E++)i[E]=_,f[E]=255}}if(null!=o&&o.length)for(let g=0;g<o.length;g++){const w=Math.ceil(o[2*g]-r),M=Math.floor(o[2*g+1]-r);for(let _=w;_<=M;_++)f[_]=0}return{lut:i,offset:r,mask:f}}function F(e,n,t){if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const l=e.includes("16")?65536:256,s=e.includes("s")?-l/2:0,o=new Uint8Array(l);if(n)for(let a=0;a<n.length;a++){const h=Math.ceil(n[2*a]-s),u=Math.floor(n[2*a+1]-s);for(let r=h;r<=u;r++)o[r]=255}else o.fill(255);if(t)for(let a=0;a<t.length;a++)o[t[a]-s]=0;return{lut:o,offset:s}}function W(e,n){if(!e||0===e.length)return null;const t=e.find(g=>g.pixelBlock);if(null==(null==t?void 0:t.pixelBlock))return null;const l=(t.extent.xmax-t.extent.xmin)/t.pixelBlock.width,s=(t.extent.ymax-t.extent.ymin)/t.pixelBlock.height,o=.01*Math.min(l,s),a=e.sort((g,w)=>Math.abs(g.extent.ymax-w.extent.ymax)>o?w.extent.ymax-g.extent.ymax:Math.abs(g.extent.xmin-w.extent.xmin)>o?g.extent.xmin-w.extent.xmin:0),h=Math.min.apply(null,a.map(g=>g.extent.xmin)),u=Math.min.apply(null,a.map(g=>g.extent.ymin)),r=Math.max.apply(null,a.map(g=>g.extent.xmax)),i=Math.max.apply(null,a.map(g=>g.extent.ymax)),f={x:Math.round((n.xmin-h)/l),y:Math.round((i-n.ymax)/s)},c={width:Math.round((r-h)/l),height:Math.round((i-u)/s)},p={width:Math.round((n.xmax-n.xmin)/l),height:Math.round((n.ymax-n.ymin)/s)};return Math.round(c.width/t.pixelBlock.width)*Math.round(c.height/t.pixelBlock.height)!==a.length||f.x<0||f.y<0||c.width<p.width||c.height<p.height?null:{extent:n,pixelBlock:nt(a.map(g=>g.pixelBlock),c,{clipOffset:f,clipSize:p})}}function Y(e,n,t,l,s,o){const{width:a,height:h}=t.block,{x:u,y:r}=t.offset,{width:i,height:f}=t.mosaic,c=function H(e,n,t,l,s,o,a,h){return{xmin:s<=t*e?0:s<t*e+e?s-t*e:e,ymin:o<=l*n?0:o<l*n+n?o-l*n:n,xmax:s+a<=t*e?0:s+a<t*e+e?s+a-t*e:e,ymax:o+h<=l*n?0:o+h<l*n+n?o+h-l*n:n}}(a,h,l,s,u,r,i,f);let p=0,g=0;if(o){var w;const M=o.hasGCSSShiftTransform?360:null!==(w=o.halfWorldWidth)&&void 0!==w?w:0,_=a*o.resolutionX,I=o.startX+l*_;I<M&&I+_>M?g=o.rightPadding:I>=M&&(p=o.leftMargin-o.rightPadding,g=0)}if(c.xmax-=g,"number"!=typeof n)for(let M=c.ymin;M<c.ymax;M++){const _=(s*h+M-r)*i+(l*a-u)+p,I=M*a;for(let b=c.xmin;b<c.xmax;b++)e[_+b]=n[I+b]}else for(let M=c.ymin;M<c.ymax;M++){const _=(s*h+M-r)*i+(l*a-u)+p;for(let I=c.xmin;I<c.xmax;I++)e[_+I]=n}}function nt(e,n,t={}){const{clipOffset:l,clipSize:s,alignmentInfo:o,blockWidths:a}=t;if(a)return function ot(e,n,t){const l=e.find(I=>null!=I);if(null==l)return null;const s=e.some(I=>null==I||!!I.mask),{width:o,height:a}=n,h=s?new Uint8Array(o*a):null,{blockWidths:u}=t,r=[],i=l.getPlaneCount(),f=z.A.getPixelArrayConstructor(l.pixelType);if(s)for(let I=0,b=0;I<e.length;b+=u[I],I++){const E=e[I];if(!X(E))continue;const C=E.mask;for(let D=0;D<a;D++)for(let j=0;j<u[I];j++)h[D*o+j+b]=null==C?255:C[D*E.width+j]}const c=e.some(I=>(null==I?void 0:I.bandMasks)&&I.bandMasks.length>1),p=c?[]:void 0,g=o*a;for(let I=0;I<i;I++){const b=new f(g),E=c?new Uint8Array(g):void 0;for(let C=0,D=0;C<e.length;D+=u[C],C++){const j=e[C];if(!X(j))continue;const q=j.pixels[I];if(null!=q){for(let Z=0;Z<a;Z++)for(let J=0;J<u[C];J++)b[Z*o+J+D]=q[Z*j.width+J];if(E){var w,M;const Z=null!==(w=null===(M=j.bandMasks)||void 0===M?void 0:M[I])&&void 0!==w?w:j.mask;for(let J=0;J<a;J++)for(let rt=0;rt<u[C];rt++)E[J*o+rt+D]=Z?Z[J*j.width+rt]:255}}}r.push(b),p&&E&&p.push(E)}const _=new z.A({width:o,height:a,mask:h,bandMasks:p,pixels:r,pixelType:l.pixelType});return _.updateStatistics(),_}(e,n,{blockWidths:a});const h=e.find(R=>X(R));if(null==h)return null;const u=s?s.width:n.width,r=s?s.height:n.height,i=h.width,f=h.height,c=n.width/i,p=n.height/f,g={offset:l||{x:0,y:0},mosaic:s||n,block:{width:i,height:f}},w=h.pixelType,M=z.A.getPixelArrayConstructor(w),_=h.pixels.length,I=[];let b,E;for(let R=0;R<_;R++){E=new M(u*r);for(let et=0;et<p;et++)for(let lt=0;lt<c;lt++){const at=e[et*c+lt];X(at)&&(b=at.pixels[R],Y(E,b,g,lt,et,o))}I.push(E)}const C=e.some(R=>null==R||null!=R.mask&&R.mask.length>0),D=e.some(R=>(null==R?void 0:R.bandMasks)&&R.bandMasks.length>1),j=C?new Uint8Array(u*r):void 0,q=D?[]:void 0;if(j){for(let R=0;R<p;R++)for(let et=0;et<c;et++){const lt=e[R*c+et],at=null!=lt?lt.mask:null;Y(j,null!=at?at:lt?255:0,g,et,R,o)}if(q)for(let R=0;R<_;R++){const et=new Uint8Array(u*r);for(let lt=0;lt<p;lt++)for(let at=0;at<c;at++){var Z,J;const $=e[lt*c+at],it=null!==(Z=null==$||null===(J=$.bandMasks)||void 0===J?void 0:J[R])&&void 0!==Z?Z:null==$?void 0:$.mask;Y(et,null!=it?it:$?255:0,g,at,lt,o)}q.push(et)}}const rt=new z.A({width:u,height:r,pixels:I,pixelType:w,bandMasks:q,mask:j});return rt.updateStatistics(),rt}function B(e,n,t){if(!X(e))return null;const{width:l,height:s}=e,o=n.x,a=n.y,h=t.width+o,u=t.height+a;if(o<0||a<0||h>l||u>s||0===o&&0===a&&h===l&&u===s)return e;e.mask||(e.mask=new Uint8Array(l*s));const r=e.mask;for(let i=0;i<s;i++){const f=i*l;for(let c=0;c<l;c++)r[f+c]=i<a||i>=u||c<o||c>=h?0:1}return e.updateStatistics(),e}function O(e){if(0===e.size)return 0;let n=0,t=-1,l=0;const s=e.keys();let o=s.next();for(;!o.done;)l=e.get(o.value),l>n&&(t=o.value,n=l),o=s.next();return t}function S(e,n,t){if(0===t)return;const l=e.get(n);1===l?e.delete(n):e.set(n,l-1)}function L(e,n,t){0!==t&&e.set(n,e.has(n)?e.get(n)+1:1)}function d(e,n,t){let{x:l,y:s}=n;const{width:o,height:a}=t;if(0===l&&0===s&&a===e.height&&o===e.width)return e;const{width:h,height:u}=e,r=Math.max(0,s),i=Math.max(0,l),f=Math.min(l+o,h),c=Math.min(s+a,u);if(f<0||c<0||!X(e))return null;l=Math.max(0,-l),s=Math.max(0,-s);const{pixels:p}=e,g=o*a,w=p.length,M=[];for(let E=0;E<w;E++){const C=p[E],D=z.A.createEmptyBand(e.pixelType,g);for(let j=r;j<c;j++){const q=j*h;let Z=(j+s-r)*o+l;for(let J=i;J<f;J++)D[Z++]=C[q+J]}M.push(D)}const _=new Uint8Array(g),I=e.mask;for(let E=r;E<c;E++){const C=E*h;let D=(E+s-r)*o+l;for(let j=i;j<f;j++)_[D++]=I?I[C+j]:1}const b=new z.A({width:t.width,height:t.height,pixelType:e.pixelType,pixels:M,mask:_});return b.updateStatistics(),b}function A(e,n=!0){if(!X(e))return null;const{pixels:t,width:l,height:s,mask:o,pixelType:a}=e,h=[],u=Math.round(l/2),r=Math.round(s/2),i=s-1,f=l-1;for(let p=0;p<t.length;p++){const g=t[p],w=z.A.createEmptyBand(a,u*r);let M=0;for(let _=0;_<s;_+=2)for(let I=0;I<l;I+=2){const b=g[_*l+I];if(n){const E=I===f?b:g[_*l+I+1],C=_===i?b:g[_*l+I+l];w[M++]=(b+E+C+(I===f?C:_===i?E:g[_*l+I+l+1]))/4}else w[M++]=b}h.push(w)}let c=null;if(null!=o){c=new Uint8Array(u*r);let p=0;for(let g=0;g<s;g+=2)for(let w=0;w<l;w+=2){const M=o[g*l+w];if(n){const _=w===f?M:o[g*l+w+1],I=g===i?M:o[g*l+w+l];c[p++]=M*_*I*(w===f?I:g===i?_:o[g*l+w+l+1])?1:0}else c[p++]=M}}return new z.A({width:u,height:r,pixelType:a,pixels:h,mask:c})}function m(e,n,t=0,l=!0){if(!X(e))return null;const{width:s,height:o}=n;let{width:a,height:h}=e;const u=new Map,r={x:0,y:0},i=1+t;let f=e;for(let c=0;c<i;c++){const p=Math.ceil(a/s),g=Math.ceil(h/o);for(let w=0;w<g;w++){r.y=w*o;for(let M=0;M<p;M++){r.x=M*s;const _=d(f,r,n);u.set(`${c}/${w}/${M}`,_)}}c<i-1&&(f=A(f,l)),a=Math.round(a/2),h=Math.round(h/2)}return u}function v(e){const{pixelBlock:n,tileSize:t,level:l,row:s,col:o,useBilinear:a}=e;if(!X(n))return null;const{width:h,height:u}=t,r=2**l,i=r*h,f=r*u;let c=d(n,{y:s*f,x:o*i},{width:i,height:f});if(!c)return null;for(let p=l;p>0;p--)c=A(c,a);return c}function x(e,n,t,l,s=0){const{width:o,height:a}=e,{width:h,height:u}=n,r=l.cols,i=l.rows,f=Math.ceil(h/r-.1/r),c=Math.ceil(u/i-.1/i);let p,g,w,M,_,I,b;const E=f*r,C=E*c*i,D=new Float32Array(C),j=new Float32Array(C),q=new Uint32Array(C),Z=new Uint32Array(C);let J,rt,R=0;for(let et=0;et<c;et++)for(let lt=0;lt<f;lt++){p=12*(et*f+lt),g=t[p],w=t[p+1],M=t[p+2],_=t[p+3],I=t[p+4],b=t[p+5];for(let at=0;at<i;at++){R=(et*i+at)*E+lt*r,rt=(at+.5)/i;for(let $=0;$<at;$++)J=($+.5)/r,D[R+$]=(g*J+w*rt+M)*o+s,j[R+$]=(_*J+I*rt+b)*a+s,q[R+$]=Math.floor(D[R+$]),Z[R+$]=Math.floor(j[R+$])}p+=6,g=t[p],w=t[p+1],M=t[p+2],_=t[p+3],I=t[p+4],b=t[p+5];for(let at=0;at<i;at++){R=(et*i+at)*E+lt*r,rt=(at+.5)/i;for(let $=at;$<r;$++)J=($+.5)/r,D[R+$]=(g*J+w*rt+M)*o+s,j[R+$]=(_*J+I*rt+b)*a+s,q[R+$]=Math.floor(D[R+$]),Z[R+$]=Math.floor(j[R+$])}}return{offsets_x:D,offsets_y:j,offsets_xi:q,offsets_yi:Z,gridWidth:E}}function y(e,n){const{coefficients:t,spacing:l}=n,{offsets_x:s,offsets_y:o,gridWidth:a}=x(e,e,t,{rows:l[0],cols:l[1]}),{width:h,height:u}=e,r=new Float32Array(h*u),i=180/Math.PI;for(let f=0;f<u;f++)for(let c=0;c<h;c++){const p=f*a+c,g=0===f?p:p-a,w=f===u-1?p:p+a,M=s[g]-s[w],_=o[w]-o[g];if(isNaN(M)||isNaN(_))r[f*h+c]=90;else{let I=Math.atan2(_,M)*i;I=(360+I)%360,r[f*h+c]=I}}return r}function T(e,n,t,l,s="nearest"){if(!X(e))return null;"majority"===s&&(e=function k(e){if(!X(e))return null;const n=e.clone(),{width:t,height:l,pixels:s}=e,o=s[0],a=n.pixels[0],h=e.mask;for(let u=2;u<l-1;u++){const r=new Map;for(let f=u-2;f<u+2;f++)for(let c=0;c<4;c++){const p=f*t+c;L(r,o[p],h?h[p]:1)}a[u*t]=O(r),a[u*t+1]=a[u*t+2]=a[u*t];let i=3;for(;i<t-1;i++){let f=(u-2)*t+i+1;L(r,o[f],h?h[f]:1),f=(u-1)*t+i+1,L(r,o[f],h?h[f]:1),f=u*t+i+1,L(r,o[f],h?h[f]:1),f=(u+1)*t+i+1,L(r,o[f],h?h[f]:1),f=(u-2)*t+i-3,S(r,o[f],h?h[f]:1),f=(u-1)*t+i-3,S(r,o[f],h?h[f]:1),f=u*t+i-3,S(r,o[f],h?h[f]:1),f=(u+1)*t+i-3,S(r,o[f],h?h[f]:1),a[u*t+i]=O(r)}a[u*t+i+1]=a[u*t+i]}for(let u=0;u<t;u++)a[u]=a[t+u]=a[2*t+u],a[(l-1)*t+u]=a[(l-2)*t+u];return n.updateStatistics(),n}(e));const{pixels:o,mask:a,bandMasks:h,pixelType:u}=e,r=e.width,i=e.height,f=z.A.getPixelArrayConstructor(u),c=o.length,{width:p,height:g}=n;let w=!1;for(let R=0;R<t.length;R+=3)-1===t[R]&&-1===t[R+1]&&-1===t[R+2]&&(w=!0);const{offsets_x:M,offsets_y:_,offsets_xi:I,offsets_yi:b,gridWidth:E}=x({width:r,height:i},n,t,l,"majority"===s?.5:0);let C;const D=(R,et,lt,at)=>{const $=R instanceof Float32Array||R instanceof Float64Array?0:.5;for(let it=0;it<g;it++){C=it*E;for(let ut=0;ut<p;ut++){if(M[C]<0||_[C]<0)R[it*p+ut]=0;else if(at)R[it*p+ut]=et[I[C]+b[C]*r];else{const wt=Math.floor(M[C]),Mt=Math.floor(_[C]),vt=Math.ceil(M[C]),kt=Math.ceil(_[C]),_t=M[C]-wt,bt=_[C]-Mt;R[it*p+ut]=!lt||lt[wt+Mt*r]&&lt[vt+Mt*r]&&lt[wt+kt*r]&&lt[vt+kt*r]?(1-bt)*((1-_t)*et[wt+Mt*r]+_t*et[vt+Mt*r])+bt*((1-_t)*et[wt+kt*r]+_t*et[vt+kt*r])+$:et[I[C]+b[C]*r]}C++}}},j=[];let q;const Z=(null==h?void 0:h.length)===c,J=[];for(let R=0;R<c;R++){if(Z){const et=new Uint8Array(p*g);D(et,h[R],h[R],!0),J.push(et)}q=new f(p*g),D(q,o[R],Z?h[R]:a,"nearest"===s||"majority"===s),j.push(q)}const rt=new z.A({width:p,height:g,pixelType:u,pixels:j,bandMasks:Z?J:void 0});if(null!=a)rt.mask=new Uint8Array(p*g),D(rt.mask,a,a,!0);else if(w){rt.mask=new Uint8Array(p*g);for(let R=0;R<p*g;R++)rt.mask[R]=M[R]<0||_[R]<0?0:1}return rt.updateStatistics(),rt}},50444:(Pt,At,tt)=>{tt.d(At,{$Q:()=>U,FI:()=>gt,KL:()=>Q,Lu:()=>ct,MD:()=>xt,Rn:()=>P,Ud:()=>O,Wu:()=>L,Y2:()=>st,gf:()=>S});var z=tt(49976),yt=tt(66234),pt=tt(40275);const dt=new Map;dt.set("meter-per-second",1),dt.set("kilometer-per-hour",.277778),dt.set("knots",.514444),dt.set("feet-per-second",.3048),dt.set("mile-per-hour",.44704);const mt=180/Math.PI,X=5,xt=new z.J({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function Q(d,A){return dt.get(d)/dt.get(A)||1}function ht(d){return(450-d)%360}function ct(d,A="geographic"){const[m,v]=d,x=Math.sqrt(m*m+v*v);let y=Math.atan2(v,m)*mt;return y=(360+y)%360,"geographic"===A&&(y=ht(y)),[x,y]}function ft(d,A="geographic"){let m=d[1];"geographic"===A&&(m=ht(m)),m%=360;const v=d[0];return[v*Math.cos(m/mt),v*Math.sin(m/mt)]}function st(d,A,m,v="geographic"){if(!(0,pt.AB)(d)||null==m)return d;const x="vector-magdir"===A?d.clone():gt(d,A),y=x.pixels[1];for(let T=0;T<y.length;T++)y[T]="geographic"===v?(y[T]+m[T]+270)%360:(y[T]+360-m[T])%360;return"vector-magdir"===A?x:gt(x,"vector-magdir")}function gt(d,A,m="geographic",v=1){if(!(0,pt.AB)(d))return d;const{pixels:x,width:y,height:T}=d,e=y*T,n=x[0],t=x[1],l=d.pixelType.startsWith("f")?d.pixelType:"f32",s=yt.A.createEmptyBand(l,e),o=yt.A.createEmptyBand(l,e);let a=0;for(let u=0;u<T;u++)for(let r=0;r<y;r++)"vector-uv"===A?([s[a],o[a]]=ct([n[a],t[a]],m),s[a]*=v):([s[a],o[a]]=ft([n[a],t[a]],m),s[a]*=v,o[a]*=v),a++;const h=new yt.A({pixelType:l,width:d.width,height:d.height,mask:d.mask,validPixelCount:d.validPixelCount,maskIsAlpha:d.maskIsAlpha,pixels:[s,o]});return h.updateStatistics(),h}function P(d,A,m=1){if(1===m||!(0,pt.AB)(d))return d;const v=d.clone(),{pixels:x,width:y,height:T}=v,e=x[0],n=x[1];let t=0;for(let l=0;l<T;l++)for(let s=0;s<y;s++)"vector-uv"===A?(e[t]*=m,n[t]*=m):e[t]*=m,t++;return v.updateStatistics(),v}function U(d,A,m,v,x){if(null==x||!x.spatialReference.equals(d.spatialReference))return{extent:d,width:Math.round(A/v),height:Math.round(m/v),resolution:d.width/A};const y=x.xmin,T=x.ymax,e=(d.xmax-d.xmin)/A*v,n=(d.ymax-d.ymin)/m*v,t=(e+n)/2;return d.xmin=y+Math.floor((d.xmin-y)/e)*e,d.xmax=y+Math.ceil((d.xmax-y)/e)*e,d.ymin=T+Math.floor((d.ymin-T)/n)*n,d.ymax=T+Math.ceil((d.ymax-T)/n)*n,{extent:d,width:Math.round(d.width/e),height:Math.round(d.height/n),resolution:t}}const N=K(0,0,0);function K(d=0,A=0,m=Math.PI,v=!0){v&&(m=(2*Math.PI-m)%(2*Math.PI));const x=v?-1:1,y=13*x,T=-7*x,e=-2*x,n=-16*x,t=21.75,[l,s]=V(0,A+y,m,t),[o,a]=V(d-5.5,A+T,m,t),[h,u]=V(d+5.5,A+T,m,t),[r,i]=V(d-1.5,A+e,m,t),[f,c]=V(d+1.5,A+e,m,t),[p,g]=V(d-1.5,A+n,m,t),[w,M]=V(d+1.5,A+n,m,t);return[l,s,o,a,r,i,f,c,h,u,p,g,w,M]}function G(d=0,A=Math.PI,m=!0){m&&(A=(2*Math.PI-A)%(2*Math.PI));const x=m?-1:1,y=5*x,T=20*x,e=25*x,n=45,a=2*x,h=m?1:-1,u=5*h;let[r,i]=[0+u,0-T],[f,c]=[r+2*h,i],[p,g]=[f-0*h,c+a],[w,M]=[0-u,0-e],[_,I]=[w+0*h,M-a],b=Math.ceil(d/X),E=Math.floor(b/10);b-=8*E;const C=[],D=[];for(let $=0;$<b/2;$++,E--){E<=0&&b%2==1&&$===(b-1)/2&&(w=0,_=w+0*h,M=(M+i)/2,I=M-a);const[it,ut]=V(w,M,A,n);if(E>0){const[wt,Mt]=V(f,M,A,n),[vt,kt]=V(r,i,A,n);C.push(wt),C.push(Mt),C.push(it),C.push(ut),C.push(vt),C.push(kt)}else{const[wt,Mt]=V(f,c,A,n),[vt,kt]=V(p,g,A,n),[_t,bt]=V(_,I,A,n);D.push(it),D.push(ut),D.push(_t),D.push(bt),D.push(vt),D.push(kt),D.push(wt),D.push(Mt)}M+=y,i+=y,c+=y,g+=y,I+=y}const[j,q]=V(0+u,0+T,A,n),Z=7*h,[J,rt]=V(0+Z,0+T,A,n),[R,et]=V(0+u,0-e,A,n),[lt,at]=V(0+Z,0-e,A,n);return{pennants:C,barbs:D,shaft:[j,q,J,rt,R,et,lt,at]}}function V(d,A,m,v=1){const x=Math.sqrt(d*d+A*A)/v,y=(2*Math.PI+Math.atan2(A,d))%(2*Math.PI);return[x,(2*Math.PI+y-m)%(2*Math.PI)]}const F=[0,1,3,6,10,16,21,27,33,40,47,55,63],H=[0,.5,1,1.5,2],W=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function Y(d,A,m,v){const x=Q(v||"knots",m);let y;for(y=1;y<A.length;y++)if(y===A.length-1){if(d<A[y]*x)break}else if(d<=A[y]*x)break;return Math.min(y-1,A.length-2)}function nt(d,A,m,v,x){let y=0;switch(A){case"beaufort_kn":y=Y(d,F,"knots",m);break;case"beaufort_km":y=Y(d,F,"kilometer-per-hour",m);break;case"beaufort_ft":y=Y(d,F,"feet-per-second",m);break;case"beaufort_m":y=Y(d,F,"meter-per-second",m);break;case"classified_arrow":y=Y(d,null!=x?x:[],v,m);break;case"ocean_current_m":y=Y(d,H,"meter-per-second",m);break;case"ocean_current_kn":y=Y(d,W,"knots",m)}return y}const B=[];function O(d,A){let v=0,x=0;const{width:y,height:T,mask:e}=d,n=d.pixels[0],t=[],l=[],s=Q(xt.fromJSON(A.inputUnit),"knots"),o="wind_speed"===A.style?X:Number.MAX_VALUE;for(let a=0;a<T;a++)for(let h=0;h<y;h++){const u=n[a*y+h]*s;if((!e||e[a*y+h])&&u<o){for(let i=0;i<4;i++)t[v++]=(h+.5)/y,t[v++]=(a+.5)/T,t[v++]=i<2?-.5:.5,t[v++]=i%2==0?-.5:.5,t[v++]=0,t[v++]=u;const r=4*(v/24-1);l[x++]=r,l[x++]=r+1,l[x++]=r+2,l[x++]=r+1,l[x++]=r+2,l[x++]=r+3}}return{vertexData:new Float32Array(t),indexData:new Uint32Array(l)}}function S(d,A){return"simple_scalar"===A.style?O(d,A):"wind_speed"===A.style?function k(d,A){if(0===B.length)for(let a=0;a<30;a++)B.push(G(5*a,0,!A.invertDirection));const m=Q(xt.fromJSON(A.inputUnit),"knots"),{width:v,height:x,mask:y}=d,T=d.pixels[0],e=d.pixels[1],t=[],l=[];let s=0,o=0;for(let a=0;a<x;a++)for(let h=0;h<v;h++){const u=a*v+h,r=T[u]*m;if((!y||y[a*v+h])&&r>=X){const i=(e[u]+360)%360/180*Math.PI,{pennants:f,barbs:c,shaft:p}=B[Math.min(Math.floor(r/5),29)];if(f.length+c.length===0)continue;let g=t.length/6;const w=(h+.5)/v,M=(a+.5)/x;for(let _=0;_<f.length;_+=2)t[s++]=w,t[s++]=M,t[s++]=f[_],t[s++]=f[_+1]+i,t[s++]=0,t[s++]=r;for(let _=0;_<c.length;_+=2)t[s++]=w,t[s++]=M,t[s++]=c[_],t[s++]=c[_+1]+i,t[s++]=0,t[s++]=r;for(let _=0;_<p.length;_+=2)t[s++]=w,t[s++]=M,t[s++]=p[_],t[s++]=p[_+1]+i,t[s++]=0,t[s++]=r;for(let _=0;_<f.length/6;_++)l[o++]=g,l[o++]=g+1,l[o++]=g+2,g+=3;for(let _=0;_<c.length/8;_++)l[o++]=g,l[o++]=g+1,l[o++]=g+2,l[o++]=g+1,l[o++]=g+2,l[o++]=g+3,g+=4;l[o++]=g+0,l[o++]=g+1,l[o++]=g+2,l[o++]=g+1,l[o++]=g+3,l[o++]=g+2,g+=4}}return{vertexData:new Float32Array(t),indexData:new Uint32Array(l)}}(d,A):function ot(d,A){const{style:m,inputUnit:v,outputUnit:x,breakValues:y}=A,T=xt.fromJSON(v),e=xt.fromJSON(x);let l=0,s=0;const{width:o,height:a,mask:h}=d,u=d.pixels[0],r=d.pixels[1],i=null!=h?h.filter(g=>g>0).length:o*a,f=new Float32Array(42*i),c=new Uint32Array(15*i),p=A.invertDirection?K(0,0,0,!1):N;for(let g=0;g<a;g++)for(let w=0;w<o;w++){const M=g*o+w;if(!h||h[g*o+w]){const _=(r[M]+360)%360/180*Math.PI,I=nt(u[M],m,T,e,y);for(let E=0;E<p.length;E+=2)f[l++]=(w+.5)/o,f[l++]=(g+.5)/a,f[l++]=p[E],f[l++]=p[E+1]+_,f[l++]=I,f[l++]=u[M];const b=7*(l/42-1);c[s++]=b,c[s++]=b+1,c[s++]=b+2,c[s++]=b+0,c[s++]=b+4,c[s++]=b+3,c[s++]=b+0,c[s++]=b+2,c[s++]=b+3,c[s++]=b+2,c[s++]=b+5,c[s++]=b+3,c[s++]=b+5,c[s++]=b+6,c[s++]=b+3}}return{vertexData:f,indexData:c}}(d,A)}function L(d,A,m,v=[0,0],x=.5){const{width:y,height:T,mask:e}=d,[n,t]=d.pixels,[l,s]=v,o=Math.round((y-l)/m),a=Math.round((T-s)/m),h=o*a,u=new Float32Array(h),r=new Float32Array(h),i=new Uint8Array(h),f="vector-uv"===A;for(let p=0;p<a;p++)for(let g=0;g<o;g++){let w=0;const M=p*o+g,_=Math.max(0,p*m+s),I=Math.max(0,g*m+l),b=Math.min(T,_+m),E=Math.min(y,I+m);for(let C=_;C<b;C++)for(let D=I;D<E;D++){const j=C*y+D;if(!e||e[j]){w++;const q=f?[n[j],t[j]]:[n[j],(360+t[j])%360],[Z,J]=f?q:ft(q);u[M]+=Z,r[M]+=J}}if(w>=(b-_)*(E-I)*(1-x)){i[M]=1;const[C,D]=ct([u[M]/w,r[M]/w]);u[M]=C,r[M]=D}else i[M]=0,u[M]=0,r[M]=0}const c=new yt.A({width:o,height:a,pixels:[u,r],mask:i});return c.updateStatistics(),c}},91551:(Pt,At,tt)=>{tt.d(At,{CW:()=>st,pH:()=>W});var z=tt(10467),pt=(tt(21152),tt(3248)),dt=tt(35150),mt=tt(69287),X=tt(56492),xt=tt(40707),Q=tt(58701),ht=tt(28067);const ct=()=>dt.A.getLogger("esri.views.2d.engine.flow.dataUtils"),ft=10;function st(B,k,O,S){return gt.apply(this,arguments)}function gt(){return(gt=(0,z.A)(function*(B,k,O,S){const L=performance.now(),d=function P(B,k){const O=function K(B,k,O,S){if(0===S)return B;const L=Math.round(3*S),d=new Array(2*L+1);let A=0;for(let x=-L;x<=L;x++){const y=Math.exp(-x*x/(S*S));d[x+L]=y,A+=y}for(let x=-L;x<=L;x++)d[x+L]/=A;const m=new Float32Array(B.length);for(let x=0;x<O;x++)for(let y=0;y<k;y++){let T=0,e=0;for(let n=-L;n<=L;n++){if(y+n<0||y+n>=k)continue;const t=d[n+L];T+=t*B[2*(x*k+(y+n))],e+=t*B[2*(x*k+(y+n))+1]}m[2*(x*k+y)]=T,m[2*(x*k+y)+1]=e}const v=new Float32Array(B.length);for(let x=0;x<k;x++)for(let y=0;y<O;y++){let T=0,e=0;for(let n=-L;n<=L;n++){if(y+n<0||y+n>=O)continue;const t=d[n+L];T+=t*m[2*((y+n)*k+x)],e+=t*m[2*((y+n)*k+x)+1]}v[2*(y*k+x)]=T,v[2*(y*k+x)+1]=e}return v}(k.data,k.width,k.height,B.smoothing);return B.interpolate?(S,L)=>{const d=Math.floor(S),A=Math.floor(L);if(d<0||d>=k.width)return[0,0];if(A<0||A>=k.height)return[0,0];const m=S-d,v=L-A,T=d<k.width-1?d+1:d,e=A<k.height-1?A+1:A;return[(O[2*(A*k.width+d)]*(1-v)+O[2*(e*k.width+d)]*v)*(1-m)+(O[2*(A*k.width+T)]*(1-v)+O[2*(e*k.width+T)]*v)*m,(O[2*(A*k.width+d)+1]*(1-v)+O[2*(e*k.width+d)+1]*v)*(1-m)+(O[2*(A*k.width+T)+1]*(1-v)+O[2*(e*k.width+T)+1]*v)*m]}:(S,L)=>{const d=Math.round(S),A=Math.round(L);return d<0||d>=k.width||A<0||A>=k.height?[0,0]:[O[2*(A*k.width+d)],O[2*(A*k.width+d)+1]]}}(k,O),A=performance.now(),m=function N(B,k,O,S){const L=[],d=new xt.A,A=1/Math.max(B.lineCollisionWidth,1),m=Math.round(O*A),v=Math.round(S*A),x=new Int32Array(m*v);for(let T=0;T<x.length;T++)x[T]=-1;const y=[];for(let T=0;T<S;T+=B.lineSpacing)for(let e=0;e<O;e+=B.lineSpacing)y.push({x:e,y:T,sort:d.getFloat()});y.sort((T,e)=>T.sort-e.sort);for(const{x:T,y:e}of y)if(d.getFloat()<B.density){const n=U(B,k,T,e,L.length,x,m,v,A);if(n.length<2)continue;L.push(n)}return L}(k,d,O.width,O.height),v=performance.now(),x=function G(B,k){const O=new xt.A,S=B.reduce((v,x)=>v+x.length,0),L=new Float32Array(4*S),d=new Array(B.length);let A=0,m=0;for(const v of B){const x=A;for(const y of v)L[4*A]=y.x,L[4*A+1]=y.y,L[4*A+2]=y.t,L[4*A+3]=y.speed,A++;d[m++]={startVertex:x,numberOfVertices:v.length,totalTime:v[v.length-1].t,timeSeed:k?O.getFloat():0}}return{lineVertices:L,lineDescriptors:d}}(m,!0),y=performance.now(),T="Streamlines"===B?function V(B,k){const{lineVertices:S,lineDescriptors:L}=B;let d=0,A=0;for(const n of L)d+=2*n.numberOfVertices,A+=6*(n.numberOfVertices-1);const m=new Float32Array(9*d),v=new Uint32Array(A);let x=0,y=0;function e(n,t,l,s,o,a,h,u){const r=9*x;let i=0;m[r+i++]=n,m[r+i++]=t,m[r+i++]=1,m[r+i++]=l,m[r+i++]=a,m[r+i++]=h,m[r+i++]=s/2,m[r+i++]=o/2,m[r+i++]=u,x++,m[r+i++]=n,m[r+i++]=t,m[r+i++]=-1,m[r+i++]=l,m[r+i++]=a,m[r+i++]=h,m[r+i++]=-s/2,m[r+i++]=-o/2,m[r+i++]=u,x++}for(const n of L){const{totalTime:t,timeSeed:l}=n;let s=null,o=null,a=null,h=null,u=null,r=null;for(let i=0;i<n.numberOfVertices;i++){const f=S[4*(n.startVertex+i)],c=S[4*(n.startVertex+i)+1],p=S[4*(n.startVertex+i)+2],g=S[4*(n.startVertex+i)+3];let w=null,M=null,_=null,I=null;if(i>0){w=f-s,M=c-o;const b=Math.sqrt(w*w+M*M);if(w/=b,M/=b,i>1){let E=w+u,C=M+r;const D=Math.sqrt(E*E+C*C);E/=D,C/=D;const j=Math.min(1/(E*w+C*M),k);E*=j,C*=j,_=-C,I=E}else _=-M,I=w;null!==_&&null!==I&&(e(s,o,a,_,I,t,l,g),v[y++]=x-2,v[y++]=x,v[y++]=x-1,v[y++]=x,v[y++]=x+1,v[y++]=x-1)}s=f,o=c,a=p,u=w,r=M,h=g}e(s,o,a,-r,u,t,l,h)}return{vertexData:m,indexData:v}}(x,ft):function F(B){const{lineVertices:L,lineDescriptors:d}=B;let A=0,m=0;for(const b of d){const E=b.numberOfVertices-1;A+=4*E*2,m+=6*E*2}const v=new Float32Array(16*A),x=new Uint32Array(m);let y,T,e,n,t,l,s,o,a,h,u,r,i,f,c=0,p=0;function M(b,E){let C=a+u,D=h+r;const j=Math.sqrt(C*C+D*D);C/=j,D/=j;const q=a*C+h*D;C/=q,D/=q;let Z=u+i,J=r+f;const rt=Math.sqrt(Z*Z+J*J);Z/=rt,J/=rt;const R=u*Z+r*J;Z/=R,J/=R,function w(b,E,C,D,j,q,Z,J,rt,R,et,lt,at,$){const it=16*c;let ut=0;for(const wt of[1,2])for(const Mt of[1,2,3,4])v[it+ut++]=b,v[it+ut++]=E,v[it+ut++]=C,v[it+ut++]=D,v[it+ut++]=Z,v[it+ut++]=J,v[it+ut++]=rt,v[it+ut++]=R,v[it+ut++]=wt,v[it+ut++]=Mt,v[it+ut++]=at,v[it+ut++]=$,v[it+ut++]=j/2,v[it+ut++]=q/2,v[it+ut++]=et/2,v[it+ut++]=lt/2,c++}(y,T,e,n,-D,C,t,l,s,o,-J,Z,b,E),function g(){x[p++]=c-8,x[p++]=c-7,x[p++]=c-6,x[p++]=c-7,x[p++]=c-5,x[p++]=c-6,x[p++]=c-4,x[p++]=c-3,x[p++]=c-2,x[p++]=c-3,x[p++]=c-1,x[p++]=c-2}()}function _(b,E,C,D,j,q){if(a=u,h=r,u=i,r=f,null==a&&null==h&&(a=u,h=r),null!=t&&null!=l){i=b-t,f=E-l;const Z=Math.sqrt(i*i+f*f);i/=Z,f/=Z}null!=a&&null!=h&&M(j,q),y=t,T=l,e=s,n=o,t=b,l=E,s=C,o=D}function I(b,E){a=u,h=r,u=i,r=f,null==a&&null==h&&(a=u,h=r),null!=a&&null!=h&&M(b,E)}for(const b of d){y=null,T=null,e=null,n=null,t=null,l=null,s=null,o=null,a=null,h=null,u=null,r=null,i=null,f=null;const{totalTime:E,timeSeed:C}=b;for(let D=0;D<b.numberOfVertices;D++)_(L[4*(b.startVertex+D)],L[4*(b.startVertex+D)+1],L[4*(b.startVertex+D)+2],L[4*(b.startVertex+D)+3],E,C);I(E,C)}return{vertexData:v,indexData:x}}(x),e=performance.now();return(0,pt.A)("esri-2d-profiler")&&(ct().info("I.1","_createFlowFieldFromData (ms)",Math.round(A-L)),ct().info("I.2","_getStreamlines (ms)",Math.round(v-A)),ct().info("I.3","createAnimatedLinesData (ms)",Math.round(y-v)),ct().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(e-y)),ct().info("I.5","createFlowMesh (ms)",Math.round(e-L)),ct().info("I.6","Mesh size (bytes)",T.vertexData.buffer.byteLength+T.indexData.buffer.byteLength)),yield Promise.resolve(),(0,X.Te)(S),T})).apply(this,arguments)}function U(B,k,O,S,L,d,A,m,v){const x=[];let y=O,T=S,e=0,[n,t]=k(y,T);n*=B.velocityScale,t*=B.velocityScale;const l=Math.sqrt(n*n+t*t);let s,o;x.push({x:y,y:T,t:e,speed:l});for(let a=0;a<B.verticesPerLine;a++){let[h,u]=k(y,T);h*=B.velocityScale,u*=B.velocityScale;const r=Math.sqrt(h*h+u*u);if(r<B.minSpeedThreshold)return x;const i=h/r,f=u/r;if(y+=i*B.segmentLength,T+=f*B.segmentLength,e+=B.segmentLength/r,Math.acos(i*s+f*o)>B.maxTurnAngle)return x;if(B.collisions){const c=Math.round(y*v),p=Math.round(T*v);if(c<0||c>A-1||p<0||p>m-1)return x;const g=d[p*A+c];if(-1!==g&&g!==L)return x;d[p*A+c]=L}x.push({x:y,y:T,t:e,speed:r}),s=i,o=f}return x}function H(B,k){const O=k.pixels,{width:S,height:L}=k,d=new Float32Array(S*L*2),A=k.mask||new Uint8Array(S*L*2);if(k.mask||A.fill(255),"vector-uv"===B)for(let m=0;m<S*L;m++)d[2*m]=O[0][m],d[2*m+1]=-O[1][m];else if("vector-magdir"===B)for(let m=0;m<S*L;m++){const v=O[0][m],x=(0,mt.kU)(O[1][m]),y=Math.cos(x-Math.PI/2),T=Math.sin(x-Math.PI/2);d[2*m]=y*v,d[2*m+1]=T*v}return{data:d,mask:A,width:S,height:L}}function W(B,k,O,S,L,d){return Y.apply(this,arguments)}function Y(){return(Y=(0,z.A)(function*(B,k,O,S,L,d){const A=performance.now(),m=(0,Q.Vp)(k.spatialReference);if(!m){const u=yield nt(B,k,O,S,L,d);return(0,pt.A)("esri-2d-profiler")&&ct().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-A)),(0,pt.A)("esri-2d-profiler")&&ct().info("I.9","Number of parts",1),u}const[v,x]=m.valid,T=Math.ceil(k.width/(x-v)),e=k.width/T,n=Math.round(O/T);let t=k.xmin;const l=[],s=performance.now();for(let u=0;u<T;u++){const r=new ht.A({xmin:t,xmax:t+e,ymin:k.ymin,ymax:k.ymax,spatialReference:k.spatialReference});l.push(nt(B,r,n,S,L,d)),t+=e}const o=yield Promise.all(l);(0,pt.A)("esri-2d-profiler")&&ct().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-s)),(0,pt.A)("esri-2d-profiler")&&ct().info("I.9","Number of parts",o.length);const a={data:new Float32Array(O*S*2),mask:new Uint8Array(O*S),width:O,height:S};let h=0;for(const u of o){for(let r=0;r<u.height;r++)for(let i=0;i<u.width;i++)h+i>=O||(a.data[2*(r*O+h+i)]=u.data[2*(r*u.width+i)],a.data[2*(r*O+h+i)+1]=u.data[2*(r*u.width+i)+1],a.mask[r*O+h+i]=u.mask[r*u.width+i]);h+=u.width}return(0,pt.A)("esri-2d-profiler")&&ct().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-A)),a})).apply(this,arguments)}function nt(B,k,O,S,L,d){return ot.apply(this,arguments)}function ot(){return(ot=(0,z.A)(function*(B,k,O,S,L,d){const A={requestProjectedLocalDirections:!0,signal:d};if(null!=L&&(A.timeExtent=L),"imagery"===B.type){var m;yield B.load({signal:d});const y=B.rasterInfo.dataType,T=yield B.fetchImage(k,O,S,A);return null==(null==T||null===(m=T.pixelData)||void 0===m?void 0:m.pixelBlock)?{data:new Float32Array(O*S*2),mask:new Uint8Array(O*S),width:O,height:S}:H(y,T.pixelData.pixelBlock)}yield B.load({signal:d});const v=B.serviceRasterInfo.dataType,x=yield B.fetchPixels(k,O,S,A);return null==(null==x?void 0:x.pixelBlock)?{data:new Float32Array(O*S*2),mask:new Uint8Array(O*S),width:O,height:S}:H(v,x.pixelBlock)})).apply(this,arguments)}}}]);