"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[8846],{42086:(c,a,d)=>{d.d(a,{N3:()=>l,Om:()=>o});class o{constructor(e=null,s={},r,i){this.geometry=e,this.attributes=s,this.centroid=r,this.objectId=i,this.displayId=0,this.geohashX=0,this.geohashY=0}weakClone(){const e=new o(this.geometry,this.attributes,this.centroid,this.objectId);return e.displayId=this.displayId,e.geohashX=this.geohashX,e.geohashY=this.geohashY,e}clone(){var e,s;const r=null===(e=this.geometry)||void 0===e?void 0:e.clone(),i=new o(r,{...this.attributes},null===(s=this.centroid)||void 0===s?void 0:s.clone(),this.objectId);return i.displayId=this.displayId,i.geohashX=this.geohashX,i.geohashY=this.geohashY,i}}function l(t){var e;return!(null===(e=t.geometry)||void 0===e||null===(e=e.coords)||void 0===e||!e.length)}},61808:(c,a,d)=>{d.d(a,{A:()=>o});class o{constructor(){this.objectIdFieldName=null,this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const h=new o;return h.objectIdFieldName=this.objectIdFieldName,h.globalIdFieldName=this.globalIdFieldName,h.geohashFieldName=this.geohashFieldName,h.geometryProperties=this.geometryProperties,h.geometryType=this.geometryType,h.spatialReference=this.spatialReference,h.hasZ=this.hasZ,h.hasM=this.hasM,h.features=this.features,h.fields=this.fields,h.transform=this.transform,h.exceededTransferLimit=this.exceededTransferLimit,h.uniqueIdField=this.uniqueIdField,h.queryGeometry=this.queryGeometry,h.queryGeometryType=this.queryGeometryType,h}}},13682:(c,a,d)=>{d.d(a,{A:()=>l});class l{constructor(t=[],e=[],s=!1){this.lengths=null!=t?t:[],this.coords=null!=e?e:[],this.hasIndeterminateRingOrder=s}static fromRect(t){const[e,s,r,i]=t,n=r-e,u=i-s;return new l([5],[e,s,n,0,0,u,-n,0,0,-u])}get isPoint(){return 0===this.lengths.length}get maxLength(){return Math.max(...this.lengths)}get size(){return this.lengths.reduce((t,e)=>t+e)}forEachVertex(t){let e=0;this.lengths.length||t(this.coords[0],this.coords[1]);for(let s=0;s<this.lengths.length;s++){const r=this.lengths[s];for(let i=0;i<r;i++)t(this.coords[2*(i+e)],this.coords[2*(i+e)+1]);e+=r}}deltaDecode(){const t=this.clone(),{coords:e,lengths:s}=t;let r=0;for(const i of s){for(let n=1;n<i;n++)e[2*(r+n)]+=e[2*(r+n)-2],e[2*(r+n)+1]+=e[2*(r+n)-1];r+=i}return t}clone(t){if(0===this.lengths.length)return new l([],[this.coords[0],this.coords[1]]);const e=2*(0===this.lengths.length?1:this.lengths.reduce((r,i)=>r+i)),s=this.coords.slice(0,e);return t?(t.set(s),new l(this.lengths,t,this.hasIndeterminateRingOrder)):new l(Array.from(this.lengths),Array.from(s),this.hasIndeterminateRingOrder)}}}}]);