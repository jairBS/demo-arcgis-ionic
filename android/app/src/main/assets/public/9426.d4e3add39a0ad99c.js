"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[9426],{79426:(E,u,t)=>{t.r(u),t.d(u,{default:()=>I});var n=t(8189),c=t(5922),p=t(17715),h=t(48900),i=t(85211),m=(t(3248),t(35150),t(40707),t(76576)),y=t(93327),g=t(39555),S=t(74238),C=t(95877);const M=e=>{let s=class extends e{resume(){this._isUserPaused=!1,this.suspended||this._doResume()}pause(){this._isUserPaused=!0,this.suspended||this._doPause()}disconnect(){this._doDisconnect()}connect(){this._doConnect()}clear(){this._doClear()}constructor(...r){super(...r),this._isUserPaused=!1,this.filter=null}get connectionStatus(){return(this._isUserPaused||this.suspended)&&"connected"===this._streamConnectionStatus?"paused":this._streamConnectionStatus}_onSuspendedChange(r){r?this._doPause():this._isUserPaused||this._doResume()}};return(0,n._)([(0,i.MZ)()],s.prototype,"_isUserPaused",void 0),(0,n._)([(0,i.MZ)({readOnly:!0})],s.prototype,"connectionStatus",null),(0,n._)([(0,i.MZ)({type:C.A})],s.prototype,"filter",void 0),s=(0,n._)([(0,m.$)("esri.layers.mixins.StreamLayerView")],s),s};let o=class extends(M(g.default)){constructor(){super(...arguments),this.pipelineConnectionStatus="disconnected",this.pipelineErrorString=null}initialize(){this.addHandles([(0,h.wB)(()=>this.layer.customParameters,e=>this._worker.streamMessenger.updateCustomParameters(e)),this.layer.on("send-message-to-socket",e=>this._worker.streamMessenger.sendMessageToSocket(e)),this.layer.on("send-message-to-client",e=>{this._worker.streamMessenger.sendMessageToClient(e),this._isUserPaused&&"type"in e&&"clear"===e.type&&this.incrementSourceRefreshVersion()}),(0,h.wB)(()=>this.layer.purgeOptions,()=>this._update()),(0,h.wB)(()=>this.suspended,this._onSuspendedChange.bind(this))],"constructor"),this._doResume()}destroy(){this._doPause()}get connectionError(){return this.pipelineErrorString?new c.A("stream-controller",this.pipelineErrorString):null}on(e,s){if(Array.isArray(e))return(0,p.vE)(e.map(d=>this.on(d,s)));const r=["data-received","message-received"].includes(e);r&&this._worker.streamMessenger.enableEvent(e,!0);const l=super.on(e,s),a=this;return(0,p.hA)(()=>{l.remove(),r&&(a._worker.closed||a.hasEventListener(e)||a._worker.streamMessenger.enableEvent(e,!1))})}queryLatestObservations(e,s){var r,l,a;if(!(null!==(r=this.layer.timeInfo)&&void 0!==r&&r.endField||null!==(l=this.layer.timeInfo)&&void 0!==l&&l.startField||null!==(a=this.layer.timeInfo)&&void 0!==a&&a.trackIdField))throw new c.A("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return(0,S.E)(this._worker.features.executeQueryForLatestObservations(this._cleanUpQuery(e),s).then(d=>{const v=y.A.fromJSON(d);return v.features.forEach(f=>{f.layer=this.layer,f.sourceLayer=this.layer}),v}),new y.A({features:[]}))}detach(){super.detach(),this.pipelineConnectionStatus="disconnected"}get _streamConnectionStatus(){return this.pipelineConnectionStatus}_doPause(){null!=this._refreshInterval&&(clearInterval(this._refreshInterval),this._refreshInterval=null)}_doResume(){this._refreshInterval=setInterval(()=>this.incrementSourceRefreshVersion(),this.layer.updateInterval)}_doDisconnect(){this._worker.streamMessenger.disconnect(),this._doPause()}_doConnect(){this._worker.streamMessenger.connect(),this.resume()}_doClear(){this._worker.streamMessenger.clear(),null==this._refreshInterval&&this.incrementSourceRefreshVersion()}_createClientOptions(){const e=super._createClientOptions(),s=this;return{...e,get container(){return s.featureContainer},setProperty:r=>{this.set(r.propertyName,r.value)}}}};(0,n._)([(0,i.MZ)()],o.prototype,"pipelineConnectionStatus",void 0),(0,n._)([(0,i.MZ)()],o.prototype,"pipelineErrorString",void 0),(0,n._)([(0,i.MZ)({readOnly:!0})],o.prototype,"connectionError",null),(0,n._)([(0,i.MZ)({readOnly:!0})],o.prototype,"_streamConnectionStatus",null),o=(0,n._)([(0,m.$)("esri.views.2d.layers.StreamLayerView2D")],o);const I=o}}]);